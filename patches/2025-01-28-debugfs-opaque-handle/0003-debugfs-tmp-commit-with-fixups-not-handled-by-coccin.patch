From 83b8fa12a2acecd9b6a7f19fd39a6e85b20353d7 Mon Sep 17 00:00:00 2001
From: David Reaver <me@davidreaver.com>
Date: Wed, 29 Jan 2025 16:06:06 -0800
Subject: [RFC PATCH 3/3] debugfs: tmp commit with fixups not handled by
 coccinelle script
To: Greg Kroah-Hartman <gregkh@linuxfoundation.org>,
    Rafael J. Wysocki <rafael@kernel.org>,
    Danilo Krummrich <dakr@kernel.org>
Cc: Steven Rostedt <rostedt@goodmis.org>,
    Christian Brauner <brauner@kernel.org>,
    linux-fsdevel@vger.kernel.org,
    linux-kernel@vger.kernel.org

Signed-off-by: David Reaver <me@davidreaver.com>
---
 arch/powerpc/kernel/iommu.c                    |  6 ++++--
 arch/x86/kernel/cpu/debugfs.c                  |  3 ++-
 arch/x86/kernel/kdebugfs.c                     |  4 ++--
 block/blk-mq-debugfs.c                         |  2 +-
 block/blk-timeout.c                            |  6 ++++--
 drivers/accel/habanalabs/common/debugfs.c      |  2 +-
 drivers/accel/habanalabs/common/habanalabs.h   |  2 +-
 drivers/block/drbd/drbd_debugfs.c              |  2 +-
 drivers/clk/clk-fractional-divider.c           |  2 +-
 drivers/clk/clk.c                              |  2 +-
 .../intel/qat/qat_common/adf_telemetry.h       |  2 +-
 drivers/gpio/gpio-virtuser.c                   |  6 +++---
 drivers/gpu/drm/amd/amdgpu/amdgpu_psp_ta.c     |  3 ++-
 .../amd/display/amdgpu_dm/amdgpu_dm_debugfs.c  |  2 +-
 drivers/gpu/drm/drm_debugfs.c                  |  6 +++---
 drivers/gpu/drm/msm/disp/dpu1/dpu_kms.c        |  2 +-
 .../gpu/drm/nouveau/include/nvkm/subdev/gsp.h  | 10 +++++-----
 drivers/gpu/drm/nouveau/nvkm/subdev/gsp/r535.c | 18 +++++++++---------
 drivers/gpu/host1x/debug.c                     |  2 +-
 drivers/gpu/host1x/dev.h                       |  4 ++--
 drivers/hwmon/pmbus/acbel-fsg032.c             |  2 +-
 drivers/hwmon/pmbus/dps920ab.c                 |  2 +-
 drivers/net/wireless/quantenna/qtnfmac/bus.h   |  2 +-
 drivers/net/wireless/quantenna/qtnfmac/debug.c |  2 +-
 drivers/phy/realtek/phy-rtk-usb2.c             |  2 +-
 drivers/phy/realtek/phy-rtk-usb3.c             |  2 +-
 drivers/vdpa/mlx5/net/debug.c                  |  2 +-
 include/linux/clk-provider.h                   |  3 ++-
 include/linux/fault-inject.h                   |  3 +--
 include/linux/hid.h                            |  4 ++--
 include/net/mac80211.h                         | 12 ++++++------
 include/sound/soc-dapm.h                       |  3 ++-
 kernel/gcov/fs.c                               |  4 ++--
 kernel/power/energy_model.c                    |  2 +-
 kernel/printk/index.c                          |  2 +-
 kernel/sched/debug.c                           |  2 +-
 lib/fault-inject.c                             |  2 +-
 lib/notifier-error-inject.c                    |  5 +++--
 lib/notifier-error-inject.h                    |  7 ++++---
 mm/memblock.c                                  |  2 +-
 mm/shrinker_debug.c                            |  2 +-
 net/mac80211/ieee80211_i.h                     | 14 +++++++-------
 sound/soc/fsl/fsl_ssi.h                        |  2 +-
 sound/soc/sof/sof-client-ipc-flood-test.c      |  2 +-
 sound/soc/sof/sof-client-ipc-kernel-injector.c |  2 +-
 sound/soc/sof/sof-client-ipc-msg-injector.c    |  2 +-
 virt/kvm/kvm_main.c                            |  5 +++--
 47 files changed, 95 insertions(+), 85 deletions(-)

diff --git a/arch/powerpc/kernel/iommu.c b/arch/powerpc/kernel/iommu.c
index 9120a545a91a..6aff4343146c 100644
--- a/arch/powerpc/kernel/iommu.c
+++ b/arch/powerpc/kernel/iommu.c
@@ -130,8 +130,10 @@ static bool should_fail_iommu(struct device *dev)
 
 static int __init fail_iommu_debugfs(void)
 {
-	struct dentry *dir = fault_create_debugfs_attr("fail_iommu",
-						       NULL, &fail_iommu);
+	struct debugfs_node *dir;
+
+	dir = fault_create_debugfs_attr("fail_iommu",
+					NULL, &fail_iommu);
 
 	return PTR_ERR_OR_ZERO(dir);
 }
diff --git a/arch/x86/kernel/cpu/debugfs.c b/arch/x86/kernel/cpu/debugfs.c
index 24b3cf7dd6c7..68160fe1b2d2 100644
--- a/arch/x86/kernel/cpu/debugfs.c
+++ b/arch/x86/kernel/cpu/debugfs.c
@@ -85,8 +85,9 @@ static const struct file_operations dfs_dom_ops = {
 
 static __init int cpu_init_debugfs(void)
 {
-	struct dentry *base = debugfs_create_dir("topo", arch_debugfs_dir);
 	struct debugfs_node *dir;
+	struct debugfs_node *base = debugfs_create_dir("topo", arch_debugfs_dir);
+
 	unsigned long id;
 	char name[24];
 
diff --git a/arch/x86/kernel/kdebugfs.c b/arch/x86/kernel/kdebugfs.c
index 5761aada169a..66b3670aca36 100644
--- a/arch/x86/kernel/kdebugfs.c
+++ b/arch/x86/kernel/kdebugfs.c
@@ -73,7 +73,7 @@ static const struct file_operations fops_setup_data = {
 };
 
 static void __init
-create_setup_data_node(struct dentry *parent, int no,
+create_setup_data_node(struct debugfs_node *parent, int no,
 		       struct setup_data_node *node)
 {
 	struct debugfs_node *d;
@@ -86,7 +86,7 @@ create_setup_data_node(struct dentry *parent, int no,
 	debugfs_create_file("data", S_IRUGO, d, node, &fops_setup_data);
 }
 
-static int __init create_setup_data_nodes(struct dentry *parent)
+static int __init create_setup_data_nodes(struct debugfs_node *parent)
 {
 	struct setup_indirect *indirect;
 	struct setup_data_node *node;
diff --git a/block/blk-mq-debugfs.c b/block/blk-mq-debugfs.c
index f8aeffe1ef20..26f82b9b191e 100644
--- a/block/blk-mq-debugfs.c
+++ b/block/blk-mq-debugfs.c
@@ -609,7 +609,7 @@ static void debugfs_create_files(struct debugfs_node *parent, void *data,
 	if (IS_ERR_OR_NULL(parent))
 		return;
 
-	d_inode(parent)->i_private = data;
+	debugfs_node_inode(parent)->i_private = data;
 
 	for (; attr->name; attr++)
 		debugfs_create_file(attr->name, attr->mode, parent,
diff --git a/block/blk-timeout.c b/block/blk-timeout.c
index 1b8de0417fc1..5cfb13c8fa9b 100644
--- a/block/blk-timeout.c
+++ b/block/blk-timeout.c
@@ -28,8 +28,10 @@ EXPORT_SYMBOL_GPL(__blk_should_fake_timeout);
 
 static int __init fail_io_timeout_debugfs(void)
 {
-	struct dentry *dir = fault_create_debugfs_attr("fail_io_timeout",
-						NULL, &fail_io_timeout);
+	struct debugfs_node *dir;
+
+	dir = fault_create_debugfs_attr("fail_io_timeout",
+					NULL, &fail_io_timeout);
 
 	return PTR_ERR_OR_ZERO(dir);
 }
diff --git a/drivers/accel/habanalabs/common/debugfs.c b/drivers/accel/habanalabs/common/debugfs.c
index ca7677293a55..a606b8bdd5d1 100644
--- a/drivers/accel/habanalabs/common/debugfs.c
+++ b/drivers/accel/habanalabs/common/debugfs.c
@@ -1555,7 +1555,7 @@ static const struct file_operations hl_debugfs_fops = {
 	.release = single_release,
 };
 
-static void add_secured_nodes(struct hl_dbg_device_entry *dev_entry, struct dentry *root)
+static void add_secured_nodes(struct hl_dbg_device_entry *dev_entry, struct debugfs_node *root)
 {
 	debugfs_create_u8("i2c_bus",
 				0644,
diff --git a/drivers/accel/habanalabs/common/habanalabs.h b/drivers/accel/habanalabs/common/habanalabs.h
index 6f27ce4fa01b..ca5ee6bb5b02 100644
--- a/drivers/accel/habanalabs/common/habanalabs.h
+++ b/drivers/accel/habanalabs/common/habanalabs.h
@@ -2405,7 +2405,7 @@ struct hl_debugfs_entry {
  * @i2c_len: generic u8 debugfs file for length value to use in i2c_data_read.
  */
 struct hl_dbg_device_entry {
-	struct dentry			*root;
+	struct debugfs_node		*root;
 	struct hl_device		*hdev;
 	struct hl_debugfs_entry		*entry_arr;
 	struct list_head		file_list;
diff --git a/drivers/block/drbd/drbd_debugfs.c b/drivers/block/drbd/drbd_debugfs.c
index 91e252910f70..6d4fd99a69b0 100644
--- a/drivers/block/drbd/drbd_debugfs.c
+++ b/drivers/block/drbd/drbd_debugfs.c
@@ -481,7 +481,7 @@ void drbd_debugfs_resource_add(struct drbd_resource *resource)
 	resource->debugfs_res_in_flight_summary = dentry;
 }
 
-static void drbd_debugfs_remove(struct dentry **dp)
+static void drbd_debugfs_remove(struct debugfs_node **dp)
 {
 	debugfs_remove(*dp);
 	*dp = NULL;
diff --git a/drivers/clk/clk-fractional-divider.c b/drivers/clk/clk-fractional-divider.c
index da057172cc90..8f74a78ffabe 100644
--- a/drivers/clk/clk-fractional-divider.c
+++ b/drivers/clk/clk-fractional-divider.c
@@ -241,7 +241,7 @@ static int clk_fd_denominator_get(void *hw, u64 *val)
 }
 DEFINE_DEBUGFS_ATTRIBUTE(clk_fd_denominator_fops, clk_fd_denominator_get, NULL, "%llu\n");
 
-static void clk_fd_debug_init(struct clk_hw *hw, struct dentry *dentry)
+static void clk_fd_debug_init(struct clk_hw *hw, struct debugfs_node *dentry)
 {
 	debugfs_create_file("numerator", 0444, dentry, hw, &clk_fd_numerator_fops);
 	debugfs_create_file("denominator", 0444, dentry, hw, &clk_fd_denominator_fops);
diff --git a/drivers/clk/clk.c b/drivers/clk/clk.c
index de5dd4c80885..bf5b5cfeba74 100644
--- a/drivers/clk/clk.c
+++ b/drivers/clk/clk.c
@@ -3705,7 +3705,7 @@ static int clk_max_rate_show(struct seq_file *s, void *data)
 }
 DEFINE_SHOW_ATTRIBUTE(clk_max_rate);
 
-static void clk_debug_create_one(struct clk_core *core, struct dentry *pdentry)
+static void clk_debug_create_one(struct clk_core *core, struct debugfs_node *pdentry)
 {
 	struct debugfs_node *root;
 
diff --git a/drivers/crypto/intel/qat/qat_common/adf_telemetry.h b/drivers/crypto/intel/qat/qat_common/adf_telemetry.h
index e54a406cc1b4..85d7d06fbb2d 100644
--- a/drivers/crypto/intel/qat/qat_common/adf_telemetry.h
+++ b/drivers/crypto/intel/qat/qat_common/adf_telemetry.h
@@ -56,7 +56,7 @@ struct adf_telemetry {
 	 * values of @regs_data
 	 */
 	void **regs_hist_buff;
-	struct dentry *dbg_dir;
+	struct debugfs_node *dbg_dir;
 	u8 *rp_num_indexes;
 	/**
 	 * @regs_hist_lock: protects from race conditions between write and read
diff --git a/drivers/gpio/gpio-virtuser.c b/drivers/gpio/gpio-virtuser.c
index 69914ee26d93..69eb8f520121 100644
--- a/drivers/gpio/gpio-virtuser.c
+++ b/drivers/gpio/gpio-virtuser.c
@@ -766,7 +766,7 @@ static int gpio_virtuser_create_debugfs_attrs(
 static int gpio_virtuser_dbgfs_init_line_array_attrs(struct device *dev,
 						     struct gpio_descs *descs,
 						     const char *id,
-						     struct dentry *dbgfs_entry)
+						     struct debugfs_node *dbgfs_entry)
 {
 	struct gpio_virtuser_line_array_data *data;
 	char *name;
@@ -795,7 +795,7 @@ static int gpio_virtuser_dbgfs_init_line_attrs(struct device *dev,
 					       struct gpio_desc *desc,
 					       const char *id,
 					       unsigned int index,
-					       struct dentry *dbgfs_entry)
+					       struct debugfs_node *dbgfs_entry)
 {
 	struct gpio_virtuser_line_data *data;
 	char *name;
@@ -830,7 +830,7 @@ static int gpio_virtuser_dbgfs_init_line_attrs(struct device *dev,
 
 static void gpio_virtuser_debugfs_remove(void *data)
 {
-	struct dentry *dbgfs_entry = data;
+	struct debugfs_node *dbgfs_entry = data;
 
 	debugfs_remove_recursive(dbgfs_entry);
 }
diff --git a/drivers/gpu/drm/amd/amdgpu/amdgpu_psp_ta.c b/drivers/gpu/drm/amd/amdgpu/amdgpu_psp_ta.c
index 38face981c3e..875cc48756ae 100644
--- a/drivers/gpu/drm/amd/amdgpu/amdgpu_psp_ta.c
+++ b/drivers/gpu/drm/amd/amdgpu/amdgpu_psp_ta.c
@@ -380,7 +380,8 @@ void amdgpu_ta_if_debugfs_init(struct amdgpu_device *adev)
 {
 	struct drm_minor *minor = adev_to_drm(adev)->primary;
 
-	struct dentry *dir = debugfs_create_dir("ta_if", minor->debugfs_root);
+	struct debugfs_node *dir = debugfs_create_dir("ta_if",
+						      minor->debugfs_root);
 
 	debugfs_create_file("ta_load", 0200, dir, adev,
 				     &ta_load_debugfs_fops);
diff --git a/drivers/gpu/drm/amd/display/amdgpu_dm/amdgpu_dm_debugfs.c b/drivers/gpu/drm/amd/display/amdgpu_dm/amdgpu_dm_debugfs.c
index 049046c60462..4a0da780bb86 100644
--- a/drivers/gpu/drm/amd/display/amdgpu_dm/amdgpu_dm_debugfs.c
+++ b/drivers/gpu/drm/amd/display/amdgpu_dm/amdgpu_dm_debugfs.c
@@ -3488,7 +3488,7 @@ static const struct file_operations edp_ilr_debugfs_fops = {
 void connector_debugfs_init(struct amdgpu_dm_connector *connector)
 {
 	int i;
-	struct dentry *dir = connector->base.debugfs_entry;
+	struct debugfs_node *dir = connector->base.debugfs_entry;
 
 	if (connector->base.connector_type == DRM_MODE_CONNECTOR_DisplayPort ||
 	    connector->base.connector_type == DRM_MODE_CONNECTOR_eDP) {
diff --git a/drivers/gpu/drm/drm_debugfs.c b/drivers/gpu/drm/drm_debugfs.c
index 98a4166d9bf6..f72a9cf52d7b 100644
--- a/drivers/gpu/drm/drm_debugfs.c
+++ b/drivers/gpu/drm/drm_debugfs.c
@@ -275,12 +275,12 @@ int drm_debugfs_remove_files(const struct drm_info_list *files, int count,
 	int i;
 
 	for (i = 0; i < count; i++) {
-		struct dentry *dent = debugfs_lookup(files[i].name, root);
+		struct debugfs_node *dent = debugfs_lookup(files[i].name, root);
 
 		if (!dent)
 			continue;
 
-		drmm_kfree(minor->dev, d_inode(dent)->i_private);
+		drmm_kfree(minor->dev, debugfs_node_inode(dent)->i_private);
 		debugfs_remove(dent);
 	}
 	return 0;
@@ -562,7 +562,7 @@ static const struct file_operations audio_infoframe_fops = {
 };
 
 static int create_hdmi_audio_infoframe_file(struct drm_connector *connector,
-					    struct dentry *parent)
+					    struct debugfs_node *parent)
 {
 	struct debugfs_node *file;
 
diff --git a/drivers/gpu/drm/msm/disp/dpu1/dpu_kms.c b/drivers/gpu/drm/msm/disp/dpu1/dpu_kms.c
index 430e1a4d10ac..63cc76873d95 100644
--- a/drivers/gpu/drm/msm/disp/dpu1/dpu_kms.c
+++ b/drivers/gpu/drm/msm/disp/dpu1/dpu_kms.c
@@ -178,7 +178,7 @@ static const struct file_operations dpu_plane_danger_enable = {
 static void dpu_debugfs_danger_init(struct dpu_kms *dpu_kms,
 		struct debugfs_node *parent)
 {
-	struct dentry *entry = debugfs_create_dir("danger", parent);
+	struct debugfs_node *entry = debugfs_create_dir("danger", parent);
 
 	debugfs_create_file("danger_status", 0600, entry,
 			dpu_kms, &dpu_debugfs_danger_stats_fops);
diff --git a/drivers/gpu/drm/nouveau/include/nvkm/subdev/gsp.h b/drivers/gpu/drm/nouveau/include/nvkm/subdev/gsp.h
index 5c5f4607fcc9..c5c205f65875 100644
--- a/drivers/gpu/drm/nouveau/include/nvkm/subdev/gsp.h
+++ b/drivers/gpu/drm/nouveau/include/nvkm/subdev/gsp.h
@@ -229,11 +229,11 @@ struct nvkm_gsp {
 	 * in memory until the dentry is deleted.
 	 */
 	struct {
-		struct dentry *parent;
-		struct dentry *init;
-		struct dentry *rm;
-		struct dentry *intr;
-		struct dentry *pmu;
+		struct debugfs_node *parent;
+		struct debugfs_node *init;
+		struct debugfs_node *rm;
+		struct debugfs_node *intr;
+		struct debugfs_node *pmu;
 	} debugfs;
 	struct debugfs_blob_wrapper blob_init;
 	struct debugfs_blob_wrapper blob_intr;
diff --git a/drivers/gpu/drm/nouveau/nvkm/subdev/gsp/r535.c b/drivers/gpu/drm/nouveau/nvkm/subdev/gsp/r535.c
index 73fa8a5b9e46..6eaabfb239ea 100644
--- a/drivers/gpu/drm/nouveau/nvkm/subdev/gsp/r535.c
+++ b/drivers/gpu/drm/nouveau/nvkm/subdev/gsp/r535.c
@@ -2172,7 +2172,7 @@ r535_gsp_msg_libos_print(void *priv, u32 fn, void *repv, u32 repc)
 static struct debugfs_node *create_debugfs(struct nvkm_gsp *gsp, const char *name,
 				     struct debugfs_blob_wrapper *blob)
 {
-	struct dentry *dent;
+	struct debugfs_node *dent;
 
 	dent = debugfs_create_blob(name, 0444, gsp->debugfs.parent, blob);
 	if (IS_ERR(dent)) {
@@ -2187,7 +2187,7 @@ static struct debugfs_node *create_debugfs(struct nvkm_gsp *gsp, const char *nam
 	 *
 	 * [1] https://lore.kernel.org/r/linux-fsdevel/20240207200619.3354549-1-ttabi@nvidia.com/
 	 */
-	i_size_write(d_inode(dent), blob->size);
+	i_size_write(debugfs_node_inode(dent), blob->size);
 
 	return dent;
 }
@@ -2264,10 +2264,10 @@ r535_gsp_libos_debugfs_init(struct nvkm_gsp *gsp)
 		goto error;
 	}
 
-	i_size_write(d_inode(gsp->debugfs.init), gsp->blob_init.size);
-	i_size_write(d_inode(gsp->debugfs.intr), gsp->blob_intr.size);
-	i_size_write(d_inode(gsp->debugfs.rm), gsp->blob_rm.size);
-	i_size_write(d_inode(gsp->debugfs.pmu), gsp->blob_pmu.size);
+	i_size_write(debugfs_node_inode(gsp->debugfs.init), gsp->blob_init.size);
+	i_size_write(debugfs_node_inode(gsp->debugfs.intr), gsp->blob_intr.size);
+	i_size_write(debugfs_node_inode(gsp->debugfs.rm), gsp->blob_rm.size);
+	i_size_write(debugfs_node_inode(gsp->debugfs.pmu), gsp->blob_pmu.size);
 
 	r535_gsp_msg_ntfy_add(gsp, NV_VGPU_MSG_EVENT_UCODE_LIBOS_PRINT,
 			      r535_gsp_msg_libos_print, gsp);
@@ -2793,12 +2793,12 @@ static bool is_empty(const struct debugfs_blob_wrapper *b)
  * To preserve the logging buffers, the buffers need to be copied, but only
  * if they actually have data.
  */
-static int r535_gsp_copy_log(struct dentry *parent,
+static int r535_gsp_copy_log(struct debugfs_node *parent,
 			     const char *name,
 			     const struct debugfs_blob_wrapper *s,
 			     struct debugfs_blob_wrapper *t)
 {
-	struct dentry *dent;
+	struct debugfs_node *dent;
 	void *p;
 
 	if (is_empty(s))
@@ -2819,7 +2819,7 @@ static int r535_gsp_copy_log(struct dentry *parent,
 		return PTR_ERR(dent);
 	}
 
-	i_size_write(d_inode(dent), t->size);
+	i_size_write(debugfs_node_inode(dent), t->size);
 
 	return 0;
 }
diff --git a/drivers/gpu/host1x/debug.c b/drivers/gpu/host1x/debug.c
index a18cc8d8caf5..e9171bde1bc7 100644
--- a/drivers/gpu/host1x/debug.c
+++ b/drivers/gpu/host1x/debug.c
@@ -169,7 +169,7 @@ DEFINE_SHOW_ATTRIBUTE(host1x_debug);
 
 static void host1x_debugfs_init(struct host1x *host1x)
 {
-	struct dentry *de = debugfs_create_dir("tegra-host1x", NULL);
+	struct debugfs_node *de = debugfs_create_dir("tegra-host1x", NULL);
 
 	/* Store the created entry */
 	host1x->debugfs = de;
diff --git a/drivers/gpu/host1x/dev.h b/drivers/gpu/host1x/dev.h
index 4ac330ee2486..bc3412ff059f 100644
--- a/drivers/gpu/host1x/dev.h
+++ b/drivers/gpu/host1x/dev.h
@@ -52,7 +52,7 @@ struct host1x_pushbuffer_ops {
 };
 
 struct host1x_debug_ops {
-	void (*debug_init)(struct dentry *de);
+	void (*debug_init)(struct debugfs_node *de);
 	void (*show_channel_cdma)(struct host1x *host,
 				  struct host1x_channel *ch,
 				  struct output *o);
@@ -329,7 +329,7 @@ static inline void host1x_hw_pushbuffer_init(struct host1x *host,
 	host->cdma_pb_op->init(pb);
 }
 
-static inline void host1x_hw_debug_init(struct host1x *host, struct dentry *de)
+static inline void host1x_hw_debug_init(struct host1x *host, struct debugfs_node *de)
 {
 	if (host->debug_op && host->debug_op->debug_init)
 		host->debug_op->debug_init(de);
diff --git a/drivers/hwmon/pmbus/acbel-fsg032.c b/drivers/hwmon/pmbus/acbel-fsg032.c
index 9f07fb4abaff..6fc29dca847a 100644
--- a/drivers/hwmon/pmbus/acbel-fsg032.c
+++ b/drivers/hwmon/pmbus/acbel-fsg032.c
@@ -40,7 +40,7 @@ static const struct file_operations acbel_debugfs_ops = {
 
 static void acbel_fsg032_init_debugfs(struct i2c_client *client)
 {
-	struct dentry *debugfs = pmbus_get_debugfs_dir(client);
+	struct debugfs_node *debugfs = pmbus_get_debugfs_dir(client);
 
 	if (!debugfs)
 		return;
diff --git a/drivers/hwmon/pmbus/dps920ab.c b/drivers/hwmon/pmbus/dps920ab.c
index 52970d5ef61d..4669c658a52e 100644
--- a/drivers/hwmon/pmbus/dps920ab.c
+++ b/drivers/hwmon/pmbus/dps920ab.c
@@ -112,7 +112,7 @@ DEFINE_SHOW_ATTRIBUTE(dps920ab_mfr_model);
 static void dps920ab_init_debugfs(struct dps920ab_data *data, struct i2c_client *client)
 {
 	struct debugfs_node *debugfs_dir;
-	struct dentry *root;
+	struct debugfs_node *root;
 
 	root = pmbus_get_debugfs_dir(client);
 	if (!root)
diff --git a/drivers/net/wireless/quantenna/qtnfmac/bus.h b/drivers/net/wireless/quantenna/qtnfmac/bus.h
index 7f8646e77ee0..e3eb70b1ebb8 100644
--- a/drivers/net/wireless/quantenna/qtnfmac/bus.h
+++ b/drivers/net/wireless/quantenna/qtnfmac/bus.h
@@ -65,7 +65,7 @@ struct qtnf_bus {
 	struct work_struct fw_work;
 	struct work_struct event_work;
 	struct mutex bus_lock; /* lock during command/event processing */
-	struct dentry *dbg_dir;
+	struct debugfs_node *dbg_dir;
 	struct notifier_block netdev_nb;
 	u8 hw_id[ETH_ALEN];
 	/* bus private data */
diff --git a/drivers/net/wireless/quantenna/qtnfmac/debug.c b/drivers/net/wireless/quantenna/qtnfmac/debug.c
index 2d3574c1f10e..4077e656bd82 100644
--- a/drivers/net/wireless/quantenna/qtnfmac/debug.c
+++ b/drivers/net/wireless/quantenna/qtnfmac/debug.c
@@ -5,7 +5,7 @@
 
 void qtnf_debugfs_init(struct qtnf_bus *bus, const char *name)
 {
-	struct dentry *parent = qtnf_get_debugfs_dir();
+	struct debugfs_node *parent = qtnf_get_debugfs_dir();
 
 	bus->dbg_dir = debugfs_create_dir(name, parent);
 }
diff --git a/drivers/phy/realtek/phy-rtk-usb2.c b/drivers/phy/realtek/phy-rtk-usb2.c
index b84a8db7168d..eff7bf8f8ee1 100644
--- a/drivers/phy/realtek/phy-rtk-usb2.c
+++ b/drivers/phy/realtek/phy-rtk-usb2.c
@@ -708,7 +708,7 @@ static const struct phy_ops ops = {
 };
 
 #ifdef CONFIG_DEBUG_FS
-static struct dentry *create_phy_debug_root(void)
+static struct debugfs_node *create_phy_debug_root(void)
 {
 	struct debugfs_node *phy_debug_root;
 
diff --git a/drivers/phy/realtek/phy-rtk-usb3.c b/drivers/phy/realtek/phy-rtk-usb3.c
index d5943da94484..d309389b6f42 100644
--- a/drivers/phy/realtek/phy-rtk-usb3.c
+++ b/drivers/phy/realtek/phy-rtk-usb3.c
@@ -342,7 +342,7 @@ static const struct phy_ops ops = {
 };
 
 #ifdef CONFIG_DEBUG_FS
-static struct dentry *create_phy_debug_root(void)
+static struct debugfs_node *create_phy_debug_root(void)
 {
 	struct debugfs_node *phy_debug_root;
 
diff --git a/drivers/vdpa/mlx5/net/debug.c b/drivers/vdpa/mlx5/net/debug.c
index 9c85162c19fc..e5ef5f2cd84b 100644
--- a/drivers/vdpa/mlx5/net/debug.c
+++ b/drivers/vdpa/mlx5/net/debug.c
@@ -84,7 +84,7 @@ DEFINE_SHOW_ATTRIBUTE(packets);
 DEFINE_SHOW_ATTRIBUTE(bytes);
 
 static void add_counter_node(struct mlx5_vdpa_counter *counter,
-			     struct dentry *parent)
+			     struct debugfs_node *parent)
 {
 	debugfs_create_file("packets", 0444, parent, counter,
 			    &packets_fops);
diff --git a/include/linux/clk-provider.h b/include/linux/clk-provider.h
index 2e6e603b7493..768938c6ae5f 100644
--- a/include/linux/clk-provider.h
+++ b/include/linux/clk-provider.h
@@ -6,6 +6,7 @@
 #ifndef __LINUX_CLK_PROVIDER_H
 #define __LINUX_CLK_PROVIDER_H
 
+#include <linux/debugfs.h>
 #include <linux/of.h>
 #include <linux/of_clk.h>
 
@@ -265,7 +266,7 @@ struct clk_ops {
 					  struct clk_duty *duty);
 	int		(*init)(struct clk_hw *hw);
 	void		(*terminate)(struct clk_hw *hw);
-	void		(*debug_init)(struct clk_hw *hw, struct dentry *dentry);
+	void		(*debug_init)(struct clk_hw *hw, struct debugfs_node *dentry);
 };
 
 /**
diff --git a/include/linux/fault-inject.h b/include/linux/fault-inject.h
index e5bfc36b35e2..f7e5d2463713 100644
--- a/include/linux/fault-inject.h
+++ b/include/linux/fault-inject.h
@@ -5,7 +5,6 @@
 #include <linux/err.h>
 #include <linux/types.h>
 
-struct dentry;
 struct kmem_cache;
 
 #ifdef CONFIG_FAULT_INJECTION
@@ -33,7 +32,7 @@ struct fault_attr {
 
 	unsigned long count;
 	struct ratelimit_state ratelimit_state;
-	struct dentry *dname;
+	struct debugfs_node *dname;
 };
 
 enum fault_flags {
diff --git a/include/linux/hid.h b/include/linux/hid.h
index d796ada2dde8..4321ae40c35b 100644
--- a/include/linux/hid.h
+++ b/include/linux/hid.h
@@ -679,8 +679,8 @@ struct hid_device {
 	/* debugging support via debugfs */
 	unsigned short debug;
 	struct debugfs_node *debug_dir;
-	struct dentry *debug_rdesc;
-	struct dentry *debug_events;
+	struct debugfs_node *debug_rdesc;
+	struct debugfs_node *debug_events;
 	struct list_head debug_list;
 	spinlock_t  debug_list_lock;
 	wait_queue_head_t debug_wait;
diff --git a/include/net/mac80211.h b/include/net/mac80211.h
index 3443ac47384a..8896fdc00ecb 100644
--- a/include/net/mac80211.h
+++ b/include/net/mac80211.h
@@ -2010,7 +2010,7 @@ enum ieee80211_neg_ttlm_res {
  *	restrictions.
  * @hw_queue: hardware queue for each AC
  * @cab_queue: content-after-beacon (DTIM beacon really) queue, AP mode only
- * @debugfs_dir: debugfs dentry, can be used by drivers to create own per
+ * @debugfs_dir: debugfs_node, can be used by drivers to create own per
  *	interface debug files. Note that it will be NULL for the virtual
  *	monitor interface (if that is requested.)
  * @probe_req_reg: probe requests should be reported to mac80211 for this
@@ -4570,15 +4570,15 @@ struct ieee80211_ops {
 	void (*link_add_debugfs)(struct ieee80211_hw *hw,
 				 struct ieee80211_vif *vif,
 				 struct ieee80211_bss_conf *link_conf,
-				 struct dentry *dir);
+				 struct debugfs_node *dir);
 	void (*sta_add_debugfs)(struct ieee80211_hw *hw,
 				struct ieee80211_vif *vif,
 				struct ieee80211_sta *sta,
-				struct dentry *dir);
+				struct debugfs_node *dir);
 	void (*link_sta_add_debugfs)(struct ieee80211_hw *hw,
 				     struct ieee80211_vif *vif,
 				     struct ieee80211_link_sta *link_sta,
-				     struct dentry *dir);
+				     struct debugfs_node *dir);
 #endif
 	void (*sta_notify)(struct ieee80211_hw *hw, struct ieee80211_vif *vif,
 			enum sta_notify_cmd, struct ieee80211_sta *sta);
@@ -7010,7 +7010,7 @@ struct rate_control_ops {
 	const char *name;
 	void *(*alloc)(struct ieee80211_hw *hw);
 	void (*add_debugfs)(struct ieee80211_hw *hw, void *priv,
-			    struct dentry *debugfsdir);
+			    struct debugfs_node *debugfsdir);
 	void (*free)(void *priv);
 
 	void *(*alloc_sta)(void *priv, struct ieee80211_sta *sta, gfp_t gfp);
@@ -7034,7 +7034,7 @@ struct rate_control_ops {
 			 struct ieee80211_tx_rate_control *txrc);
 
 	void (*add_sta_debugfs)(void *priv, void *priv_sta,
-				struct dentry *dir);
+				struct debugfs_node *dir);
 
 	u32 (*get_expected_throughput)(void *priv_sta);
 };
diff --git a/include/sound/soc-dapm.h b/include/sound/soc-dapm.h
index bb8445b7a384..cd876d2d3060 100644
--- a/include/sound/soc-dapm.h
+++ b/include/sound/soc-dapm.h
@@ -10,6 +10,7 @@
 #ifndef __LINUX_SND_SOC_DAPM_H
 #define __LINUX_SND_SOC_DAPM_H
 
+#include <linux/debugfs.h>
 #include <linux/types.h>
 #include <sound/control.h>
 #include <sound/soc-topology.h>
@@ -498,7 +499,7 @@ int snd_soc_dapm_mux_update_power(struct snd_soc_dapm_context *dapm,
 
 /* dapm sys fs - used by the core */
 extern struct attribute *soc_dapm_dev_attrs[];
-void snd_soc_dapm_debugfs_init(struct snd_soc_dapm_context *dapm, struct dentry *parent);
+void snd_soc_dapm_debugfs_init(struct snd_soc_dapm_context *dapm, struct debugfs_node *parent);
 
 /* dapm audio pin control and status */
 int snd_soc_dapm_enable_pin(struct snd_soc_dapm_context *dapm, const char *pin);
diff --git a/kernel/gcov/fs.c b/kernel/gcov/fs.c
index ab3352062772..8290ea6391ef 100644
--- a/kernel/gcov/fs.c
+++ b/kernel/gcov/fs.c
@@ -57,7 +57,7 @@ struct gcov_node {
 	struct gcov_info **loaded_info;
 	struct gcov_info *unloaded_info;
 	struct debugfs_node *dentry;
-	struct dentry **links;
+	struct debugfs_node **links;
 	int num_loaded;
 	char name[];
 };
@@ -473,7 +473,7 @@ static const char *deskew(const char *basename)
  * Create links to additional files (usually .c and .gcno files) which the
  * gcov tool expects to find in the same directory as the gcov data file.
  */
-static void add_links(struct gcov_node *node, struct dentry *parent)
+static void add_links(struct gcov_node *node, struct debugfs_node *parent)
 {
 	const char *basename;
 	char *target;
diff --git a/kernel/power/energy_model.c b/kernel/power/energy_model.c
index 14ca55ca6d56..4052657cc6ba 100644
--- a/kernel/power/energy_model.c
+++ b/kernel/power/energy_model.c
@@ -67,7 +67,7 @@ DEFINE_EM_DBG_SHOW(flags, inefficiency);
 
 static void em_debug_create_ps(struct em_perf_domain *em_pd,
 			       struct em_dbg_info *em_dbg, int i,
-			       struct dentry *pd)
+			       struct debugfs_node *pd)
 {
 	struct em_perf_state *table;
 	unsigned long freq;
diff --git a/kernel/printk/index.c b/kernel/printk/index.c
index b93835ec2dbf..04eee47ab9ff 100644
--- a/kernel/printk/index.c
+++ b/kernel/printk/index.c
@@ -181,7 +181,7 @@ static inline void __init pi_setup_module_notifier(void) { }
 
 static int __init pi_init(void)
 {
-	struct dentry *dfs_root = debugfs_create_dir("printk", NULL);
+	struct debugfs_node *dfs_root = debugfs_create_dir("printk", NULL);
 
 	dfs_index = debugfs_create_dir("index", dfs_root);
 	pi_setup_module_notifier();
diff --git a/kernel/sched/debug.c b/kernel/sched/debug.c
index 668b0cc9925e..6a1f6b50edc3 100644
--- a/kernel/sched/debug.c
+++ b/kernel/sched/debug.c
@@ -568,7 +568,7 @@ static const struct file_operations sd_flags_fops = {
 	.release	= single_release,
 };
 
-static void register_sd(struct sched_domain *sd, struct dentry *parent)
+static void register_sd(struct sched_domain *sd, struct debugfs_node *parent)
 {
 #define SDM(type, mode, member)	\
 	debugfs_create_##type(#member, mode, parent, &sd->member)
diff --git a/lib/fault-inject.c b/lib/fault-inject.c
index d9a8fe11e6a4..5bf0f47725e8 100644
--- a/lib/fault-inject.c
+++ b/lib/fault-inject.c
@@ -262,7 +262,7 @@ struct debugfs_node *fault_create_debugfs_attr(const char *name,
 	debugfs_create_xul("reject-end", mode, dir, &attr->reject_end);
 #endif /* CONFIG_FAULT_INJECTION_STACKTRACE_FILTER */
 
-	attr->dname = dget(dir);
+	attr->dname = debugfs_node_get(dir);
 	return dir;
 }
 EXPORT_SYMBOL_GPL(fault_create_debugfs_attr);
diff --git a/lib/notifier-error-inject.c b/lib/notifier-error-inject.c
index 86bd53593cb8..1ddeacd10b91 100644
--- a/lib/notifier-error-inject.c
+++ b/lib/notifier-error-inject.c
@@ -47,8 +47,9 @@ static int notifier_err_inject_callback(struct notifier_block *nb,
 struct debugfs_node *notifier_err_inject_dir;
 EXPORT_SYMBOL_GPL(notifier_err_inject_dir);
 
-struct dentry *notifier_err_inject_init(const char *name, struct dentry *parent,
-			struct notifier_err_inject *err_inject, int priority)
+struct debugfs_node
+*notifier_err_inject_init(const char *name, struct debugfs_node *parent,
+			  struct notifier_err_inject *err_inject, int priority)
 {
 	struct notifier_err_inject_action *action;
 	umode_t mode = S_IFREG | S_IRUSR | S_IWUSR;
diff --git a/lib/notifier-error-inject.h b/lib/notifier-error-inject.h
index e5a29f58d22c..d840a0ef33e1 100644
--- a/lib/notifier-error-inject.h
+++ b/lib/notifier-error-inject.h
@@ -20,6 +20,7 @@ struct notifier_err_inject {
 
 extern struct debugfs_node *notifier_err_inject_dir;
 
-extern struct dentry *notifier_err_inject_init(const char *name,
-		struct dentry *parent, struct notifier_err_inject *err_inject,
-		int priority);
+extern struct debugfs_node
+*notifier_err_inject_init(const char *name, struct debugfs_node *parent,
+			  struct notifier_err_inject *err_inject,
+			  int priority);
diff --git a/mm/memblock.c b/mm/memblock.c
index 95af35fd1389..4d1867e052ad 100644
--- a/mm/memblock.c
+++ b/mm/memblock.c
@@ -2437,7 +2437,7 @@ DEFINE_SHOW_ATTRIBUTE(memblock_debug);
 
 static int __init memblock_init_debugfs(void)
 {
-	struct dentry *root = debugfs_create_dir("memblock", NULL);
+	struct debugfs_node *root = debugfs_create_dir("memblock", NULL);
 
 	debugfs_create_file("memory", 0444, root,
 			    &memblock.memory, &memblock_debug_fops);
diff --git a/mm/shrinker_debug.c b/mm/shrinker_debug.c
index 1bc001fb39b5..ade7284e0506 100644
--- a/mm/shrinker_debug.c
+++ b/mm/shrinker_debug.c
@@ -225,7 +225,7 @@ EXPORT_SYMBOL(shrinker_debugfs_rename);
 struct debugfs_node *shrinker_debugfs_detach(struct shrinker *shrinker,
 				       int *debugfs_id)
 {
-	struct dentry *entry = shrinker->debugfs_entry;
+	struct debugfs_node *entry = shrinker->debugfs_entry;
 
 	lockdep_assert_held(&shrinker_mutex);
 
diff --git a/net/mac80211/ieee80211_i.h b/net/mac80211/ieee80211_i.h
index 25d02130f443..dab7b4ec3bc8 100644
--- a/net/mac80211/ieee80211_i.h
+++ b/net/mac80211/ieee80211_i.h
@@ -1186,11 +1186,11 @@ struct ieee80211_sub_if_data {
 
 #ifdef CONFIG_MAC80211_DEBUGFS
 	struct {
-		struct dentry *subdir_stations;
-		struct dentry *default_unicast_key;
-		struct dentry *default_multicast_key;
-		struct dentry *default_mgmt_key;
-		struct dentry *default_beacon_key;
+		struct debugfs_node *subdir_stations;
+		struct debugfs_node *default_unicast_key;
+		struct debugfs_node *default_multicast_key;
+		struct debugfs_node *default_mgmt_key;
+		struct debugfs_node *default_beacon_key;
 	} debugfs;
 #endif
 
@@ -1594,8 +1594,8 @@ struct ieee80211_local {
 
 #ifdef CONFIG_MAC80211_DEBUGFS
 	struct local_debugfsdentries {
-		struct dentry *rcdir;
-		struct dentry *keys;
+		struct debugfs_node *rcdir;
+		struct debugfs_node *keys;
 	} debugfs;
 	bool force_tx_status;
 #endif
diff --git a/sound/soc/fsl/fsl_ssi.h b/sound/soc/fsl/fsl_ssi.h
index db57cad80449..6f95e230fc12 100644
--- a/sound/soc/fsl/fsl_ssi.h
+++ b/sound/soc/fsl/fsl_ssi.h
@@ -269,7 +269,7 @@ struct device;
 #if IS_ENABLED(CONFIG_DEBUG_FS)
 
 struct fsl_ssi_dbg {
-	struct dentry *dbg_dir;
+	struct debugfs_node *dbg_dir;
 
 	struct {
 		unsigned int rfrc;
diff --git a/sound/soc/sof/sof-client-ipc-flood-test.c b/sound/soc/sof/sof-client-ipc-flood-test.c
index 5fafff63e850..24a4c1e78bf9 100644
--- a/sound/soc/sof/sof-client-ipc-flood-test.c
+++ b/sound/soc/sof/sof-client-ipc-flood-test.c
@@ -29,7 +29,7 @@
 
 struct sof_ipc_flood_priv {
 	struct debugfs_node *dfs_root;
-	struct dentry *dfs_link[2];
+	struct debugfs_node *dfs_link[2];
 	char *buf;
 };
 
diff --git a/sound/soc/sof/sof-client-ipc-kernel-injector.c b/sound/soc/sof/sof-client-ipc-kernel-injector.c
index b9f576238eee..4717ff3cb213 100644
--- a/sound/soc/sof/sof-client-ipc-kernel-injector.c
+++ b/sound/soc/sof/sof-client-ipc-kernel-injector.c
@@ -92,7 +92,7 @@ static int sof_msg_inject_probe(struct auxiliary_device *auxdev,
 				const struct auxiliary_device_id *id)
 {
 	struct sof_client_dev *cdev = auxiliary_dev_to_sof_client_dev(auxdev);
-	struct dentry *debugfs_root = sof_client_get_debugfs_root(cdev);
+	struct debugfs_node *debugfs_root = sof_client_get_debugfs_root(cdev);
 	struct device *dev = &auxdev->dev;
 	struct sof_msg_inject_priv *priv;
 	size_t alloc_size;
diff --git a/sound/soc/sof/sof-client-ipc-msg-injector.c b/sound/soc/sof/sof-client-ipc-msg-injector.c
index c9b100afa2a1..2d0a2da8eea4 100644
--- a/sound/soc/sof/sof-client-ipc-msg-injector.c
+++ b/sound/soc/sof/sof-client-ipc-msg-injector.c
@@ -252,7 +252,7 @@ static int sof_msg_inject_probe(struct auxiliary_device *auxdev,
 				const struct auxiliary_device_id *id)
 {
 	struct sof_client_dev *cdev = auxiliary_dev_to_sof_client_dev(auxdev);
-	struct dentry *debugfs_root = sof_client_get_debugfs_root(cdev);
+	struct debugfs_node *debugfs_root = sof_client_get_debugfs_root(cdev);
 	static const struct file_operations *fops;
 	struct device *dev = &auxdev->dev;
 	struct sof_msg_inject_priv *priv;
diff --git a/virt/kvm/kvm_main.c b/virt/kvm/kvm_main.c
index edba5dd67c41..165764eafe9e 100644
--- a/virt/kvm/kvm_main.c
+++ b/virt/kvm/kvm_main.c
@@ -1017,7 +1017,7 @@ static int kvm_create_vm_debugfs(struct kvm *kvm, const char *fdname)
 	dent = debugfs_lookup(dir_name, kvm_debugfs_dir);
 	if (dent) {
 		pr_warn_ratelimited("KVM: debugfs: duplicate directory %s\n", dir_name);
-		dput(dent);
+		debugfs_node_put(dent);
 		mutex_unlock(&kvm_debugfs_lock);
 		return 0;
 	}
@@ -6216,7 +6216,8 @@ static void kvm_uevent_notify_change(unsigned int type, struct kvm *kvm)
 		char *tmp, *p = kmalloc(PATH_MAX, GFP_KERNEL);
 
 		if (p) {
-			tmp = dentry_path_raw(kvm->debugfs_dentry, p, PATH_MAX);
+			tmp = debugfs_node_path_raw(kvm->debugfs_dentry, p,
+						    PATH_MAX);
 			if (!IS_ERR(tmp))
 				add_uevent_var(env, "STATS_PATH=%s", tmp);
 			kfree(p);
