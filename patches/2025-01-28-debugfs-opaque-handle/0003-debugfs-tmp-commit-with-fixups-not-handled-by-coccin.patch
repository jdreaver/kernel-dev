From de5200ca4974762788ca9afd97c92e53d7eff19d Mon Sep 17 00:00:00 2001
From: David Reaver <me@davidreaver.com>
Date: Wed, 29 Jan 2025 16:06:06 -0800
Subject: [RFC PATCH 3/3] debugfs: tmp commit with fixups not handled by
 coccinelle script
To: Greg Kroah-Hartman <gregkh@linuxfoundation.org>,
    Rafael J. Wysocki <rafael@kernel.org>,
    Danilo Krummrich <dakr@kernel.org>
Cc: Steven Rostedt <rostedt@goodmis.org>,
    Christian Brauner <brauner@kernel.org>,
    linux-fsdevel@vger.kernel.org,
    linux-kernel@vger.kernel.org

Signed-off-by: David Reaver <me@davidreaver.com>
---
 arch/x86/kernel/cpu/debugfs.c            |  2 +-
 block/blk-mq-debugfs.c                   |  2 +-
 drivers/bus/moxtet.c                     |  2 +-
 drivers/clk/clk-fractional-divider.c     |  2 +-
 drivers/clk/clk.c                        |  2 +-
 drivers/dma/dw-edma/dw-edma-v0-debugfs.c |  4 ++--
 drivers/dma/dw-edma/dw-hdma-v0-debugfs.c |  4 ++--
 drivers/gpio/gpio-virtuser.c             |  6 +++---
 drivers/phy/realtek/phy-rtk-usb2.c       |  2 +-
 drivers/phy/realtek/phy-rtk-usb3.c       |  2 +-
 drivers/soc/mediatek/mtk-svs.c           |  2 +-
 drivers/vdpa/mlx5/net/debug.c            |  2 +-
 fs/debugfs/file.c                        |  3 +--
 fs/debugfs/inode.c                       | 26 ++++++++++++------------
 include/linux/clk-provider.h             |  3 ++-
 include/linux/fault-inject.h             |  3 +--
 include/net/mac80211.h                   | 12 +++++------
 include/sound/soc-dapm.h                 |  3 ++-
 kernel/gcov/fs.c                         |  4 ++--
 kernel/power/energy_model.c              |  2 +-
 kernel/sched/debug.c                     |  2 +-
 lib/error-inject.c                       |  2 +-
 lib/fault-inject.c                       |  2 +-
 lib/notifier-error-inject.c              |  5 +++--
 lib/notifier-error-inject.h              |  7 ++++---
 mm/shrinker_debug.c                      |  2 +-
 net/mac80211/ieee80211_i.h               | 14 ++++++-------
 sound/soc/fsl/fsl_ssi.h                  |  2 +-
 virt/kvm/kvm_main.c                      |  5 +++--
 29 files changed, 66 insertions(+), 63 deletions(-)

diff --git a/arch/x86/kernel/cpu/debugfs.c b/arch/x86/kernel/cpu/debugfs.c
index cacfd3f6abef..4d49a973466c 100644
--- a/arch/x86/kernel/cpu/debugfs.c
+++ b/arch/x86/kernel/cpu/debugfs.c
@@ -85,7 +85,7 @@ static const struct file_operations dfs_dom_ops = {
 
 static __init int cpu_init_debugfs(void)
 {
-	struct dentry *dir, *base = debugfs_create_dir("topo", arch_debugfs_dir);
+	struct debugfs_node *dir, *base = debugfs_create_dir("topo", arch_debugfs_dir);
 	unsigned long id;
 	char name[24];
 
diff --git a/block/blk-mq-debugfs.c b/block/blk-mq-debugfs.c
index f8aeffe1ef20..26f82b9b191e 100644
--- a/block/blk-mq-debugfs.c
+++ b/block/blk-mq-debugfs.c
@@ -609,7 +609,7 @@ static void debugfs_create_files(struct debugfs_node *parent, void *data,
 	if (IS_ERR_OR_NULL(parent))
 		return;
 
-	d_inode(parent)->i_private = data;
+	debugfs_node_inode(parent)->i_private = data;
 
 	for (; attr->name; attr++)
 		debugfs_create_file(attr->name, attr->mode, parent,
diff --git a/drivers/bus/moxtet.c b/drivers/bus/moxtet.c
index 6276551d7968..e2d7fcf1d9e4 100644
--- a/drivers/bus/moxtet.c
+++ b/drivers/bus/moxtet.c
@@ -552,7 +552,7 @@ static const struct file_operations output_fops = {
 
 static int moxtet_register_debugfs(struct moxtet *moxtet)
 {
-	struct dentry *root, *entry;
+	struct debugfs_node *root, *entry;
 
 	root = debugfs_create_dir("moxtet", NULL);
 
diff --git a/drivers/clk/clk-fractional-divider.c b/drivers/clk/clk-fractional-divider.c
index da057172cc90..8f74a78ffabe 100644
--- a/drivers/clk/clk-fractional-divider.c
+++ b/drivers/clk/clk-fractional-divider.c
@@ -241,7 +241,7 @@ static int clk_fd_denominator_get(void *hw, u64 *val)
 }
 DEFINE_DEBUGFS_ATTRIBUTE(clk_fd_denominator_fops, clk_fd_denominator_get, NULL, "%llu\n");
 
-static void clk_fd_debug_init(struct clk_hw *hw, struct dentry *dentry)
+static void clk_fd_debug_init(struct clk_hw *hw, struct debugfs_node *dentry)
 {
 	debugfs_create_file("numerator", 0444, dentry, hw, &clk_fd_numerator_fops);
 	debugfs_create_file("denominator", 0444, dentry, hw, &clk_fd_denominator_fops);
diff --git a/drivers/clk/clk.c b/drivers/clk/clk.c
index de5dd4c80885..bf5b5cfeba74 100644
--- a/drivers/clk/clk.c
+++ b/drivers/clk/clk.c
@@ -3705,7 +3705,7 @@ static int clk_max_rate_show(struct seq_file *s, void *data)
 }
 DEFINE_SHOW_ATTRIBUTE(clk_max_rate);
 
-static void clk_debug_create_one(struct clk_core *core, struct dentry *pdentry)
+static void clk_debug_create_one(struct clk_core *core, struct debugfs_node *pdentry)
 {
 	struct debugfs_node *root;
 
diff --git a/drivers/dma/dw-edma/dw-edma-v0-debugfs.c b/drivers/dma/dw-edma/dw-edma-v0-debugfs.c
index 97f48757ac39..66e8c817d1c2 100644
--- a/drivers/dma/dw-edma/dw-edma-v0-debugfs.c
+++ b/drivers/dma/dw-edma/dw-edma-v0-debugfs.c
@@ -175,7 +175,7 @@ dw_edma_debugfs_regs_wr(struct dw_edma *dw, struct debugfs_node *dent)
 		WR_REGISTER_UNROLL(dw, ch6_pwr_en),
 		WR_REGISTER_UNROLL(dw, ch7_pwr_en),
 	};
-	struct dentry *regs_dent, *ch_dent;
+	struct debugfs_node *regs_dent, *ch_dent;
 	int nr_entries, i;
 	char name[32];
 
@@ -238,7 +238,7 @@ static noinline_for_stack void dw_edma_debugfs_regs_rd(struct dw_edma *dw,
 		RD_REGISTER_UNROLL(dw, ch6_pwr_en),
 		RD_REGISTER_UNROLL(dw, ch7_pwr_en),
 	};
-	struct dentry *regs_dent, *ch_dent;
+	struct debugfs_node *regs_dent, *ch_dent;
 	int nr_entries, i;
 	char name[32];
 
diff --git a/drivers/dma/dw-edma/dw-hdma-v0-debugfs.c b/drivers/dma/dw-edma/dw-hdma-v0-debugfs.c
index d5af619dae48..d2c76b239e5e 100644
--- a/drivers/dma/dw-edma/dw-hdma-v0-debugfs.c
+++ b/drivers/dma/dw-edma/dw-hdma-v0-debugfs.c
@@ -117,7 +117,7 @@ static void dw_hdma_debugfs_regs_ch(struct dw_edma *dw, enum dw_edma_dir dir,
 static void dw_hdma_debugfs_regs_wr(struct dw_edma *dw,
 				    struct debugfs_node *dent)
 {
-	struct dentry *regs_dent, *ch_dent;
+	struct debugfs_node *regs_dent, *ch_dent;
 	char name[32];
 	int i;
 
@@ -135,7 +135,7 @@ static void dw_hdma_debugfs_regs_wr(struct dw_edma *dw,
 static void dw_hdma_debugfs_regs_rd(struct dw_edma *dw,
 				    struct debugfs_node *dent)
 {
-	struct dentry *regs_dent, *ch_dent;
+	struct debugfs_node *regs_dent, *ch_dent;
 	char name[32];
 	int i;
 
diff --git a/drivers/gpio/gpio-virtuser.c b/drivers/gpio/gpio-virtuser.c
index 69914ee26d93..69eb8f520121 100644
--- a/drivers/gpio/gpio-virtuser.c
+++ b/drivers/gpio/gpio-virtuser.c
@@ -766,7 +766,7 @@ static int gpio_virtuser_create_debugfs_attrs(
 static int gpio_virtuser_dbgfs_init_line_array_attrs(struct device *dev,
 						     struct gpio_descs *descs,
 						     const char *id,
-						     struct dentry *dbgfs_entry)
+						     struct debugfs_node *dbgfs_entry)
 {
 	struct gpio_virtuser_line_array_data *data;
 	char *name;
@@ -795,7 +795,7 @@ static int gpio_virtuser_dbgfs_init_line_attrs(struct device *dev,
 					       struct gpio_desc *desc,
 					       const char *id,
 					       unsigned int index,
-					       struct dentry *dbgfs_entry)
+					       struct debugfs_node *dbgfs_entry)
 {
 	struct gpio_virtuser_line_data *data;
 	char *name;
@@ -830,7 +830,7 @@ static int gpio_virtuser_dbgfs_init_line_attrs(struct device *dev,
 
 static void gpio_virtuser_debugfs_remove(void *data)
 {
-	struct dentry *dbgfs_entry = data;
+	struct debugfs_node *dbgfs_entry = data;
 
 	debugfs_remove_recursive(dbgfs_entry);
 }
diff --git a/drivers/phy/realtek/phy-rtk-usb2.c b/drivers/phy/realtek/phy-rtk-usb2.c
index b84a8db7168d..eff7bf8f8ee1 100644
--- a/drivers/phy/realtek/phy-rtk-usb2.c
+++ b/drivers/phy/realtek/phy-rtk-usb2.c
@@ -708,7 +708,7 @@ static const struct phy_ops ops = {
 };
 
 #ifdef CONFIG_DEBUG_FS
-static struct dentry *create_phy_debug_root(void)
+static struct debugfs_node *create_phy_debug_root(void)
 {
 	struct debugfs_node *phy_debug_root;
 
diff --git a/drivers/phy/realtek/phy-rtk-usb3.c b/drivers/phy/realtek/phy-rtk-usb3.c
index d5943da94484..d309389b6f42 100644
--- a/drivers/phy/realtek/phy-rtk-usb3.c
+++ b/drivers/phy/realtek/phy-rtk-usb3.c
@@ -342,7 +342,7 @@ static const struct phy_ops ops = {
 };
 
 #ifdef CONFIG_DEBUG_FS
-static struct dentry *create_phy_debug_root(void)
+static struct debugfs_node *create_phy_debug_root(void)
 {
 	struct debugfs_node *phy_debug_root;
 
diff --git a/drivers/soc/mediatek/mtk-svs.c b/drivers/soc/mediatek/mtk-svs.c
index 7c349a94b45c..2990df4fca1e 100644
--- a/drivers/soc/mediatek/mtk-svs.c
+++ b/drivers/soc/mediatek/mtk-svs.c
@@ -856,7 +856,7 @@ debug_fops_ro(status);
 static int svs_create_debug_cmds(struct svs_platform *svsp)
 {
 	struct svs_bank *svsb;
-	struct dentry *svs_dir, *svsb_dir, *file_entry;
+	struct debugfs_node *svs_dir, *svsb_dir, *file_entry;
 	const char *d = "/sys/kernel/debug/svs";
 	u32 i, idx;
 
diff --git a/drivers/vdpa/mlx5/net/debug.c b/drivers/vdpa/mlx5/net/debug.c
index 9c85162c19fc..e5ef5f2cd84b 100644
--- a/drivers/vdpa/mlx5/net/debug.c
+++ b/drivers/vdpa/mlx5/net/debug.c
@@ -84,7 +84,7 @@ DEFINE_SHOW_ATTRIBUTE(packets);
 DEFINE_SHOW_ATTRIBUTE(bytes);
 
 static void add_counter_node(struct mlx5_vdpa_counter *counter,
-			     struct dentry *parent)
+			     struct debugfs_node *parent)
 {
 	debugfs_create_file("packets", 0444, parent, counter,
 			    &packets_fops);
diff --git a/fs/debugfs/file.c b/fs/debugfs/file.c
index 050303948048..4f07d5b7aa39 100644
--- a/fs/debugfs/file.c
+++ b/fs/debugfs/file.c
@@ -76,8 +76,7 @@ enum dbgfs_get_mode {
 	DBGFS_GET_SHORT,
 };
 
-static int __debugfs_file_get(struct debugfs_node *dentry,
-			      enum dbgfs_get_mode mode)
+static int __debugfs_file_get(struct dentry *dentry, enum dbgfs_get_mode mode)
 {
 	struct debugfs_fsdata *fsd;
 	void *d_fsd;
diff --git a/fs/debugfs/inode.c b/fs/debugfs/inode.c
index f72866817376..2d004b2afceb 100644
--- a/fs/debugfs/inode.c
+++ b/fs/debugfs/inode.c
@@ -43,7 +43,7 @@ static unsigned int debugfs_allow __ro_after_init = DEFAULT_DEBUGFS_ALLOW_BITS;
  * to lock down individual files.
  */
 static int debugfs_setattr(struct mnt_idmap *idmap,
-			   struct debugfs_node *dentry, struct iattr *ia)
+			   struct dentry *dentry, struct iattr *ia)
 {
 	int ret;
 
@@ -192,7 +192,7 @@ static int debugfs_reconfigure(struct fs_context *fc)
 	return 0;
 }
 
-static int debugfs_show_options(struct seq_file *m, struct debugfs_node *root)
+static int debugfs_show_options(struct seq_file *m, struct dentry *root)
 {
 	struct debugfs_fs_info *fsi = root->d_sb->s_fs_info;
 
@@ -239,7 +239,7 @@ static const struct super_operations debugfs_super_operations = {
 	.free_inode	= debugfs_free_inode,
 };
 
-static void debugfs_release_dentry(struct debugfs_node *dentry)
+static void debugfs_release_dentry(struct dentry *dentry)
 {
 	struct debugfs_fsdata *fsd = dentry->d_fsdata;
 
@@ -341,7 +341,7 @@ MODULE_ALIAS_FS("debugfs");
 struct debugfs_node *debugfs_lookup(const char *name, struct debugfs_node *parent)
 {
 	struct debugfs_node *node;
-	struct debugfs_node *dentry;
+	struct dentry *dentry;
 
 	if (!debugfs_initialized() || IS_ERR_OR_NULL(name) || IS_ERR(parent))
 		return NULL;
@@ -380,7 +380,7 @@ struct inode *debugfs_node_inode(struct debugfs_node *node)
 
 static struct dentry *start_creating(const char *name, struct dentry *parent)
 {
-	struct debugfs_node *dentry;
+	struct dentry *dentry;
 	int error;
 
 	if (!(debugfs_allow & DEBUGFS_ALLOW_API))
@@ -447,13 +447,13 @@ static struct dentry *end_creating(struct dentry *dentry)
 	return dentry;
 }
 
-static struct debugfs_node *__debugfs_create_file(const char *name, umode_t mode,
-				struct debugfs_node *parent, void *data,
+static struct dentry *__debugfs_create_file(const char *name, umode_t mode,
+				struct dentry *parent, void *data,
 				const void *aux,
 				const struct file_operations *proxy_fops,
 				const void *real_fops)
 {
-	struct debugfs_node *dentry;
+	struct dentry *dentry;
 	struct inode *inode;
 
 	if (!(mode & S_IFMT))
@@ -496,7 +496,7 @@ struct debugfs_node *debugfs_create_file_full(const char *name, umode_t mode,
 					const void *aux,
 					const struct file_operations *fops)
 {
-	struct debugfs_node *dentry;
+	struct dentry *dentry;
 
 	dentry = __debugfs_create_file(name, mode, (struct dentry *)parent,
 				       data, aux,
@@ -512,7 +512,7 @@ struct debugfs_node *debugfs_create_file_short(const char *name, umode_t mode,
 					const struct debugfs_short_fops *fops)
 {
 
-	struct debugfs_node *dentry;
+	struct dentry *dentry;
 
 	dentry = __debugfs_create_file(name, mode, (struct dentry *)parent,
 				       data, aux,
@@ -553,7 +553,7 @@ struct debugfs_node *debugfs_create_file_unsafe(const char *name, umode_t mode,
 				   struct debugfs_node *parent, void *data,
 				   const struct file_operations *fops)
 {
-	struct debugfs_node *dentry;
+	struct dentry *dentry;
 
 	dentry = __debugfs_create_file(name, mode, (struct dentry *)parent, data,
 				       NULL, &debugfs_open_proxy_file_operations,
@@ -725,7 +725,7 @@ struct debugfs_node *debugfs_create_symlink(const char *name,
 					    struct debugfs_node *parent,
 					    const char *target)
 {
-	struct debugfs_node *dentry;
+	struct dentry *dentry;
 	struct inode *inode;
 	char *link = kstrdup(target, GFP_KERNEL);
 	if (!link)
@@ -752,7 +752,7 @@ struct debugfs_node *debugfs_create_symlink(const char *name,
 }
 EXPORT_SYMBOL_GPL(debugfs_create_symlink);
 
-static void __debugfs_file_removed(struct debugfs_node *dentry)
+static void __debugfs_file_removed(struct dentry *dentry)
 {
 	struct debugfs_fsdata *fsd;
 
diff --git a/include/linux/clk-provider.h b/include/linux/clk-provider.h
index 2e6e603b7493..768938c6ae5f 100644
--- a/include/linux/clk-provider.h
+++ b/include/linux/clk-provider.h
@@ -6,6 +6,7 @@
 #ifndef __LINUX_CLK_PROVIDER_H
 #define __LINUX_CLK_PROVIDER_H
 
+#include <linux/debugfs.h>
 #include <linux/of.h>
 #include <linux/of_clk.h>
 
@@ -265,7 +266,7 @@ struct clk_ops {
 					  struct clk_duty *duty);
 	int		(*init)(struct clk_hw *hw);
 	void		(*terminate)(struct clk_hw *hw);
-	void		(*debug_init)(struct clk_hw *hw, struct dentry *dentry);
+	void		(*debug_init)(struct clk_hw *hw, struct debugfs_node *dentry);
 };
 
 /**
diff --git a/include/linux/fault-inject.h b/include/linux/fault-inject.h
index e5bfc36b35e2..f7e5d2463713 100644
--- a/include/linux/fault-inject.h
+++ b/include/linux/fault-inject.h
@@ -5,7 +5,6 @@
 #include <linux/err.h>
 #include <linux/types.h>
 
-struct dentry;
 struct kmem_cache;
 
 #ifdef CONFIG_FAULT_INJECTION
@@ -33,7 +32,7 @@ struct fault_attr {
 
 	unsigned long count;
 	struct ratelimit_state ratelimit_state;
-	struct dentry *dname;
+	struct debugfs_node *dname;
 };
 
 enum fault_flags {
diff --git a/include/net/mac80211.h b/include/net/mac80211.h
index 3443ac47384a..8896fdc00ecb 100644
--- a/include/net/mac80211.h
+++ b/include/net/mac80211.h
@@ -2010,7 +2010,7 @@ enum ieee80211_neg_ttlm_res {
  *	restrictions.
  * @hw_queue: hardware queue for each AC
  * @cab_queue: content-after-beacon (DTIM beacon really) queue, AP mode only
- * @debugfs_dir: debugfs dentry, can be used by drivers to create own per
+ * @debugfs_dir: debugfs_node, can be used by drivers to create own per
  *	interface debug files. Note that it will be NULL for the virtual
  *	monitor interface (if that is requested.)
  * @probe_req_reg: probe requests should be reported to mac80211 for this
@@ -4570,15 +4570,15 @@ struct ieee80211_ops {
 	void (*link_add_debugfs)(struct ieee80211_hw *hw,
 				 struct ieee80211_vif *vif,
 				 struct ieee80211_bss_conf *link_conf,
-				 struct dentry *dir);
+				 struct debugfs_node *dir);
 	void (*sta_add_debugfs)(struct ieee80211_hw *hw,
 				struct ieee80211_vif *vif,
 				struct ieee80211_sta *sta,
-				struct dentry *dir);
+				struct debugfs_node *dir);
 	void (*link_sta_add_debugfs)(struct ieee80211_hw *hw,
 				     struct ieee80211_vif *vif,
 				     struct ieee80211_link_sta *link_sta,
-				     struct dentry *dir);
+				     struct debugfs_node *dir);
 #endif
 	void (*sta_notify)(struct ieee80211_hw *hw, struct ieee80211_vif *vif,
 			enum sta_notify_cmd, struct ieee80211_sta *sta);
@@ -7010,7 +7010,7 @@ struct rate_control_ops {
 	const char *name;
 	void *(*alloc)(struct ieee80211_hw *hw);
 	void (*add_debugfs)(struct ieee80211_hw *hw, void *priv,
-			    struct dentry *debugfsdir);
+			    struct debugfs_node *debugfsdir);
 	void (*free)(void *priv);
 
 	void *(*alloc_sta)(void *priv, struct ieee80211_sta *sta, gfp_t gfp);
@@ -7034,7 +7034,7 @@ struct rate_control_ops {
 			 struct ieee80211_tx_rate_control *txrc);
 
 	void (*add_sta_debugfs)(void *priv, void *priv_sta,
-				struct dentry *dir);
+				struct debugfs_node *dir);
 
 	u32 (*get_expected_throughput)(void *priv_sta);
 };
diff --git a/include/sound/soc-dapm.h b/include/sound/soc-dapm.h
index bb8445b7a384..cd876d2d3060 100644
--- a/include/sound/soc-dapm.h
+++ b/include/sound/soc-dapm.h
@@ -10,6 +10,7 @@
 #ifndef __LINUX_SND_SOC_DAPM_H
 #define __LINUX_SND_SOC_DAPM_H
 
+#include <linux/debugfs.h>
 #include <linux/types.h>
 #include <sound/control.h>
 #include <sound/soc-topology.h>
@@ -498,7 +499,7 @@ int snd_soc_dapm_mux_update_power(struct snd_soc_dapm_context *dapm,
 
 /* dapm sys fs - used by the core */
 extern struct attribute *soc_dapm_dev_attrs[];
-void snd_soc_dapm_debugfs_init(struct snd_soc_dapm_context *dapm, struct dentry *parent);
+void snd_soc_dapm_debugfs_init(struct snd_soc_dapm_context *dapm, struct debugfs_node *parent);
 
 /* dapm audio pin control and status */
 int snd_soc_dapm_enable_pin(struct snd_soc_dapm_context *dapm, const char *pin);
diff --git a/kernel/gcov/fs.c b/kernel/gcov/fs.c
index ab3352062772..8290ea6391ef 100644
--- a/kernel/gcov/fs.c
+++ b/kernel/gcov/fs.c
@@ -57,7 +57,7 @@ struct gcov_node {
 	struct gcov_info **loaded_info;
 	struct gcov_info *unloaded_info;
 	struct debugfs_node *dentry;
-	struct dentry **links;
+	struct debugfs_node **links;
 	int num_loaded;
 	char name[];
 };
@@ -473,7 +473,7 @@ static const char *deskew(const char *basename)
  * Create links to additional files (usually .c and .gcno files) which the
  * gcov tool expects to find in the same directory as the gcov data file.
  */
-static void add_links(struct gcov_node *node, struct dentry *parent)
+static void add_links(struct gcov_node *node, struct debugfs_node *parent)
 {
 	const char *basename;
 	char *target;
diff --git a/kernel/power/energy_model.c b/kernel/power/energy_model.c
index 14ca55ca6d56..4052657cc6ba 100644
--- a/kernel/power/energy_model.c
+++ b/kernel/power/energy_model.c
@@ -67,7 +67,7 @@ DEFINE_EM_DBG_SHOW(flags, inefficiency);
 
 static void em_debug_create_ps(struct em_perf_domain *em_pd,
 			       struct em_dbg_info *em_dbg, int i,
-			       struct dentry *pd)
+			       struct debugfs_node *pd)
 {
 	struct em_perf_state *table;
 	unsigned long freq;
diff --git a/kernel/sched/debug.c b/kernel/sched/debug.c
index 668b0cc9925e..6a1f6b50edc3 100644
--- a/kernel/sched/debug.c
+++ b/kernel/sched/debug.c
@@ -568,7 +568,7 @@ static const struct file_operations sd_flags_fops = {
 	.release	= single_release,
 };
 
-static void register_sd(struct sched_domain *sd, struct dentry *parent)
+static void register_sd(struct sched_domain *sd, struct debugfs_node *parent)
 {
 #define SDM(type, mode, member)	\
 	debugfs_create_##type(#member, mode, parent, &sd->member)
diff --git a/lib/error-inject.c b/lib/error-inject.c
index 887acd9a6ea6..e1aab683a12c 100644
--- a/lib/error-inject.c
+++ b/lib/error-inject.c
@@ -214,7 +214,7 @@ DEFINE_SEQ_ATTRIBUTE(ei);
 
 static int __init ei_debugfs_init(void)
 {
-	struct dentry *dir, *file;
+	struct debugfs_node *dir, *file;
 
 	dir = debugfs_create_dir("error_injection", NULL);
 
diff --git a/lib/fault-inject.c b/lib/fault-inject.c
index d9a8fe11e6a4..5bf0f47725e8 100644
--- a/lib/fault-inject.c
+++ b/lib/fault-inject.c
@@ -262,7 +262,7 @@ struct debugfs_node *fault_create_debugfs_attr(const char *name,
 	debugfs_create_xul("reject-end", mode, dir, &attr->reject_end);
 #endif /* CONFIG_FAULT_INJECTION_STACKTRACE_FILTER */
 
-	attr->dname = dget(dir);
+	attr->dname = debugfs_node_get(dir);
 	return dir;
 }
 EXPORT_SYMBOL_GPL(fault_create_debugfs_attr);
diff --git a/lib/notifier-error-inject.c b/lib/notifier-error-inject.c
index 86bd53593cb8..1ddeacd10b91 100644
--- a/lib/notifier-error-inject.c
+++ b/lib/notifier-error-inject.c
@@ -47,8 +47,9 @@ static int notifier_err_inject_callback(struct notifier_block *nb,
 struct debugfs_node *notifier_err_inject_dir;
 EXPORT_SYMBOL_GPL(notifier_err_inject_dir);
 
-struct dentry *notifier_err_inject_init(const char *name, struct dentry *parent,
-			struct notifier_err_inject *err_inject, int priority)
+struct debugfs_node
+*notifier_err_inject_init(const char *name, struct debugfs_node *parent,
+			  struct notifier_err_inject *err_inject, int priority)
 {
 	struct notifier_err_inject_action *action;
 	umode_t mode = S_IFREG | S_IRUSR | S_IWUSR;
diff --git a/lib/notifier-error-inject.h b/lib/notifier-error-inject.h
index e5a29f58d22c..d840a0ef33e1 100644
--- a/lib/notifier-error-inject.h
+++ b/lib/notifier-error-inject.h
@@ -20,6 +20,7 @@ struct notifier_err_inject {
 
 extern struct debugfs_node *notifier_err_inject_dir;
 
-extern struct dentry *notifier_err_inject_init(const char *name,
-		struct dentry *parent, struct notifier_err_inject *err_inject,
-		int priority);
+extern struct debugfs_node
+*notifier_err_inject_init(const char *name, struct debugfs_node *parent,
+			  struct notifier_err_inject *err_inject,
+			  int priority);
diff --git a/mm/shrinker_debug.c b/mm/shrinker_debug.c
index 1bc001fb39b5..ade7284e0506 100644
--- a/mm/shrinker_debug.c
+++ b/mm/shrinker_debug.c
@@ -225,7 +225,7 @@ EXPORT_SYMBOL(shrinker_debugfs_rename);
 struct debugfs_node *shrinker_debugfs_detach(struct shrinker *shrinker,
 				       int *debugfs_id)
 {
-	struct dentry *entry = shrinker->debugfs_entry;
+	struct debugfs_node *entry = shrinker->debugfs_entry;
 
 	lockdep_assert_held(&shrinker_mutex);
 
diff --git a/net/mac80211/ieee80211_i.h b/net/mac80211/ieee80211_i.h
index 25d02130f443..dab7b4ec3bc8 100644
--- a/net/mac80211/ieee80211_i.h
+++ b/net/mac80211/ieee80211_i.h
@@ -1186,11 +1186,11 @@ struct ieee80211_sub_if_data {
 
 #ifdef CONFIG_MAC80211_DEBUGFS
 	struct {
-		struct dentry *subdir_stations;
-		struct dentry *default_unicast_key;
-		struct dentry *default_multicast_key;
-		struct dentry *default_mgmt_key;
-		struct dentry *default_beacon_key;
+		struct debugfs_node *subdir_stations;
+		struct debugfs_node *default_unicast_key;
+		struct debugfs_node *default_multicast_key;
+		struct debugfs_node *default_mgmt_key;
+		struct debugfs_node *default_beacon_key;
 	} debugfs;
 #endif
 
@@ -1594,8 +1594,8 @@ struct ieee80211_local {
 
 #ifdef CONFIG_MAC80211_DEBUGFS
 	struct local_debugfsdentries {
-		struct dentry *rcdir;
-		struct dentry *keys;
+		struct debugfs_node *rcdir;
+		struct debugfs_node *keys;
 	} debugfs;
 	bool force_tx_status;
 #endif
diff --git a/sound/soc/fsl/fsl_ssi.h b/sound/soc/fsl/fsl_ssi.h
index db57cad80449..6f95e230fc12 100644
--- a/sound/soc/fsl/fsl_ssi.h
+++ b/sound/soc/fsl/fsl_ssi.h
@@ -269,7 +269,7 @@ struct device;
 #if IS_ENABLED(CONFIG_DEBUG_FS)
 
 struct fsl_ssi_dbg {
-	struct dentry *dbg_dir;
+	struct debugfs_node *dbg_dir;
 
 	struct {
 		unsigned int rfrc;
diff --git a/virt/kvm/kvm_main.c b/virt/kvm/kvm_main.c
index edba5dd67c41..165764eafe9e 100644
--- a/virt/kvm/kvm_main.c
+++ b/virt/kvm/kvm_main.c
@@ -1017,7 +1017,7 @@ static int kvm_create_vm_debugfs(struct kvm *kvm, const char *fdname)
 	dent = debugfs_lookup(dir_name, kvm_debugfs_dir);
 	if (dent) {
 		pr_warn_ratelimited("KVM: debugfs: duplicate directory %s\n", dir_name);
-		dput(dent);
+		debugfs_node_put(dent);
 		mutex_unlock(&kvm_debugfs_lock);
 		return 0;
 	}
@@ -6216,7 +6216,8 @@ static void kvm_uevent_notify_change(unsigned int type, struct kvm *kvm)
 		char *tmp, *p = kmalloc(PATH_MAX, GFP_KERNEL);
 
 		if (p) {
-			tmp = dentry_path_raw(kvm->debugfs_dentry, p, PATH_MAX);
+			tmp = debugfs_node_path_raw(kvm->debugfs_dentry, p,
+						    PATH_MAX);
 			if (!IS_ERR(tmp))
 				add_uevent_var(env, "STATS_PATH=%s", tmp);
 			kfree(p);
