From afc7f802aa3e9294ae3016382ef120f7499267ca Mon Sep 17 00:00:00 2001
From: David Reaver <me@davidreaver.com>
Date: Wed, 29 Jan 2025 16:06:06 -0800
Subject: [RFC PATCH 3/3] debugfs: tmp commit with fixups not handled by
 coccinelle script
To: Greg Kroah-Hartman <gregkh@linuxfoundation.org>,
    Rafael J. Wysocki <rafael@kernel.org>,
    Danilo Krummrich <dakr@kernel.org>
Cc: Steven Rostedt <rostedt@goodmis.org>,
    Christian Brauner <brauner@kernel.org>,
    linux-fsdevel@vger.kernel.org,
    linux-kernel@vger.kernel.org

Signed-off-by: David Reaver <me@davidreaver.com>
---
 drivers/accel/habanalabs/common/habanalabs.h  |  2 +-
 drivers/block/drbd/drbd_debugfs.c             |  2 +-
 .../gpu/drm/nouveau/include/nvkm/subdev/gsp.h | 10 ++++----
 .../gpu/drm/nouveau/nvkm/subdev/gsp/r535.c    | 18 +++++++--------
 drivers/gpu/host1x/dev.h                      |  2 +-
 drivers/soc/qcom/qcom_aoss.c                  |  4 +++-
 include/linux/clk-provider.h                  |  3 ++-
 include/linux/fault-inject.h                  |  3 +--
 include/linux/fs.h                            |  8 +++----
 include/linux/hid.h                           |  4 ++--
 include/linux/mfd/aat2870.h                   |  2 +-
 include/net/mac80211.h                        | 12 +++++-----
 include/sound/soc-dapm.h                      |  3 ++-
 include/sound/soc.h                           |  2 +-
 kernel/gcov/fs.c                              |  2 +-
 kernel/trace/blktrace.c                       | 23 +++++++++++++------
 lib/fault-inject.c                            |  2 +-
 lib/notifier-error-inject.h                   |  7 +++---
 net/mac80211/ieee80211_i.h                    | 14 +++++------
 sound/soc/sof/sof-client-ipc-flood-test.c     |  2 +-
 virt/kvm/kvm_main.c                           |  5 ++--
 21 files changed, 72 insertions(+), 58 deletions(-)

diff --git a/drivers/accel/habanalabs/common/habanalabs.h b/drivers/accel/habanalabs/common/habanalabs.h
index 6f27ce4fa01b..ca5ee6bb5b02 100644
--- a/drivers/accel/habanalabs/common/habanalabs.h
+++ b/drivers/accel/habanalabs/common/habanalabs.h
@@ -2405,7 +2405,7 @@ struct hl_debugfs_entry {
  * @i2c_len: generic u8 debugfs file for length value to use in i2c_data_read.
  */
 struct hl_dbg_device_entry {
-	struct dentry			*root;
+	struct debugfs_node		*root;
 	struct hl_device		*hdev;
 	struct hl_debugfs_entry		*entry_arr;
 	struct list_head		file_list;
diff --git a/drivers/block/drbd/drbd_debugfs.c b/drivers/block/drbd/drbd_debugfs.c
index 2a52a47b6a9e..6e4332627636 100644
--- a/drivers/block/drbd/drbd_debugfs.c
+++ b/drivers/block/drbd/drbd_debugfs.c
@@ -481,7 +481,7 @@ void drbd_debugfs_resource_add(struct drbd_resource *resource)
 	resource->debugfs_res_in_flight_summary = dentry;
 }
 
-static void drbd_debugfs_remove(struct dentry **dp)
+static void drbd_debugfs_remove(struct debugfs_node **dp)
 {
 	debugfs_remove(*dp);
 	*dp = NULL;
diff --git a/drivers/gpu/drm/nouveau/include/nvkm/subdev/gsp.h b/drivers/gpu/drm/nouveau/include/nvkm/subdev/gsp.h
index 5c5f4607fcc9..c5c205f65875 100644
--- a/drivers/gpu/drm/nouveau/include/nvkm/subdev/gsp.h
+++ b/drivers/gpu/drm/nouveau/include/nvkm/subdev/gsp.h
@@ -229,11 +229,11 @@ struct nvkm_gsp {
 	 * in memory until the dentry is deleted.
 	 */
 	struct {
-		struct dentry *parent;
-		struct dentry *init;
-		struct dentry *rm;
-		struct dentry *intr;
-		struct dentry *pmu;
+		struct debugfs_node *parent;
+		struct debugfs_node *init;
+		struct debugfs_node *rm;
+		struct debugfs_node *intr;
+		struct debugfs_node *pmu;
 	} debugfs;
 	struct debugfs_blob_wrapper blob_init;
 	struct debugfs_blob_wrapper blob_intr;
diff --git a/drivers/gpu/drm/nouveau/nvkm/subdev/gsp/r535.c b/drivers/gpu/drm/nouveau/nvkm/subdev/gsp/r535.c
index 73fa8a5b9e46..6eaabfb239ea 100644
--- a/drivers/gpu/drm/nouveau/nvkm/subdev/gsp/r535.c
+++ b/drivers/gpu/drm/nouveau/nvkm/subdev/gsp/r535.c
@@ -2172,7 +2172,7 @@ r535_gsp_msg_libos_print(void *priv, u32 fn, void *repv, u32 repc)
 static struct debugfs_node *create_debugfs(struct nvkm_gsp *gsp, const char *name,
 				     struct debugfs_blob_wrapper *blob)
 {
-	struct dentry *dent;
+	struct debugfs_node *dent;
 
 	dent = debugfs_create_blob(name, 0444, gsp->debugfs.parent, blob);
 	if (IS_ERR(dent)) {
@@ -2187,7 +2187,7 @@ static struct debugfs_node *create_debugfs(struct nvkm_gsp *gsp, const char *nam
 	 *
 	 * [1] https://lore.kernel.org/r/linux-fsdevel/20240207200619.3354549-1-ttabi@nvidia.com/
 	 */
-	i_size_write(d_inode(dent), blob->size);
+	i_size_write(debugfs_node_inode(dent), blob->size);
 
 	return dent;
 }
@@ -2264,10 +2264,10 @@ r535_gsp_libos_debugfs_init(struct nvkm_gsp *gsp)
 		goto error;
 	}
 
-	i_size_write(d_inode(gsp->debugfs.init), gsp->blob_init.size);
-	i_size_write(d_inode(gsp->debugfs.intr), gsp->blob_intr.size);
-	i_size_write(d_inode(gsp->debugfs.rm), gsp->blob_rm.size);
-	i_size_write(d_inode(gsp->debugfs.pmu), gsp->blob_pmu.size);
+	i_size_write(debugfs_node_inode(gsp->debugfs.init), gsp->blob_init.size);
+	i_size_write(debugfs_node_inode(gsp->debugfs.intr), gsp->blob_intr.size);
+	i_size_write(debugfs_node_inode(gsp->debugfs.rm), gsp->blob_rm.size);
+	i_size_write(debugfs_node_inode(gsp->debugfs.pmu), gsp->blob_pmu.size);
 
 	r535_gsp_msg_ntfy_add(gsp, NV_VGPU_MSG_EVENT_UCODE_LIBOS_PRINT,
 			      r535_gsp_msg_libos_print, gsp);
@@ -2793,12 +2793,12 @@ static bool is_empty(const struct debugfs_blob_wrapper *b)
  * To preserve the logging buffers, the buffers need to be copied, but only
  * if they actually have data.
  */
-static int r535_gsp_copy_log(struct dentry *parent,
+static int r535_gsp_copy_log(struct debugfs_node *parent,
 			     const char *name,
 			     const struct debugfs_blob_wrapper *s,
 			     struct debugfs_blob_wrapper *t)
 {
-	struct dentry *dent;
+	struct debugfs_node *dent;
 	void *p;
 
 	if (is_empty(s))
@@ -2819,7 +2819,7 @@ static int r535_gsp_copy_log(struct dentry *parent,
 		return PTR_ERR(dent);
 	}
 
-	i_size_write(d_inode(dent), t->size);
+	i_size_write(debugfs_node_inode(dent), t->size);
 
 	return 0;
 }
diff --git a/drivers/gpu/host1x/dev.h b/drivers/gpu/host1x/dev.h
index a5cd1fc6ca71..41647413c25f 100644
--- a/drivers/gpu/host1x/dev.h
+++ b/drivers/gpu/host1x/dev.h
@@ -52,7 +52,7 @@ struct host1x_pushbuffer_ops {
 };
 
 struct host1x_debug_ops {
-	void (*debug_init)(struct dentry *de);
+	void (*debug_init)(struct debugfs_node *de);
 	void (*show_channel_cdma)(struct host1x *host,
 				  struct host1x_channel *ch,
 				  struct output *o);
diff --git a/drivers/soc/qcom/qcom_aoss.c b/drivers/soc/qcom/qcom_aoss.c
index c745cd9830f1..c0735ecae4a7 100644
--- a/drivers/soc/qcom/qcom_aoss.c
+++ b/drivers/soc/qcom/qcom_aoss.c
@@ -506,6 +506,7 @@ static ssize_t qmp_debugfs_write(struct file *file, const char __user *user_buf,
 				 size_t count, loff_t *pos)
 {
 	const struct qmp_debugfs_entry *entry = NULL;
+	struct debugfs_node *node;
 	struct qmp *qmp = file->private_data;
 	char buf[QMP_MSG_LEN];
 	unsigned int uint_val;
@@ -515,7 +516,8 @@ static ssize_t qmp_debugfs_write(struct file *file, const char __user *user_buf,
 	int i;
 
 	for (i = 0; i < ARRAY_SIZE(qmp->debugfs_files); i++) {
-		if (qmp->debugfs_files[i] == file->f_path.dentry) {
+		node = debugfs_node_from_dentry(file->f_path.dentry);
+		if (qmp->debugfs_files[i] == node) {
 			entry = &qmp_debugfs_entries[i];
 			break;
 		}
diff --git a/include/linux/clk-provider.h b/include/linux/clk-provider.h
index 2e6e603b7493..768938c6ae5f 100644
--- a/include/linux/clk-provider.h
+++ b/include/linux/clk-provider.h
@@ -6,6 +6,7 @@
 #ifndef __LINUX_CLK_PROVIDER_H
 #define __LINUX_CLK_PROVIDER_H
 
+#include <linux/debugfs.h>
 #include <linux/of.h>
 #include <linux/of_clk.h>
 
@@ -265,7 +266,7 @@ struct clk_ops {
 					  struct clk_duty *duty);
 	int		(*init)(struct clk_hw *hw);
 	void		(*terminate)(struct clk_hw *hw);
-	void		(*debug_init)(struct clk_hw *hw, struct dentry *dentry);
+	void		(*debug_init)(struct clk_hw *hw, struct debugfs_node *dentry);
 };
 
 /**
diff --git a/include/linux/fault-inject.h b/include/linux/fault-inject.h
index e5bfc36b35e2..f7e5d2463713 100644
--- a/include/linux/fault-inject.h
+++ b/include/linux/fault-inject.h
@@ -5,7 +5,6 @@
 #include <linux/err.h>
 #include <linux/types.h>
 
-struct dentry;
 struct kmem_cache;
 
 #ifdef CONFIG_FAULT_INJECTION
@@ -33,7 +32,7 @@ struct fault_attr {
 
 	unsigned long count;
 	struct ratelimit_state ratelimit_state;
-	struct dentry *dname;
+	struct debugfs_node *dname;
 };
 
 enum fault_flags {
diff --git a/include/linux/fs.h b/include/linux/fs.h
index cd4b198fe424..be3ad155ec9f 100644
--- a/include/linux/fs.h
+++ b/include/linux/fs.h
@@ -1180,11 +1180,11 @@ static inline struct inode *file_inode(const struct file *f)
  * Files with "fake" path should not exist nowadays, so use an assertion to make
  * sure that file_dentry() was not papering over filesystem bugs.
  */
-inline static struct debugfs_node *file_dentry(const struct file *file)
+static inline struct dentry *file_dentry(const struct file *file)
 {
-	struct debugfs_node *dentry = file->f_path.dentry;
+	struct dentry *dentry = file->f_path.dentry;
 
-	WARN_ON_ONCE(debugfs_node_inode(dentry) != file_inode(file));
+	WARN_ON_ONCE(d_inode(dentry) != file_inode(file));
 	return dentry;
 }
 
@@ -2006,7 +2006,7 @@ struct renamedata {
 int vfs_rename(struct renamedata *);
 
 static inline int vfs_whiteout(struct mnt_idmap *idmap,
-			       struct inode *dir, struct debugfs_node *dentry)
+			       struct inode *dir, struct dentry *dentry)
 {
 	return vfs_mknod(idmap, dir, dentry, S_IFCHR | WHITEOUT_MODE,
 			 WHITEOUT_DEV);
diff --git a/include/linux/hid.h b/include/linux/hid.h
index d796ada2dde8..4321ae40c35b 100644
--- a/include/linux/hid.h
+++ b/include/linux/hid.h
@@ -679,8 +679,8 @@ struct hid_device {
 	/* debugging support via debugfs */
 	unsigned short debug;
 	struct debugfs_node *debug_dir;
-	struct dentry *debug_rdesc;
-	struct dentry *debug_events;
+	struct debugfs_node *debug_rdesc;
+	struct debugfs_node *debug_events;
 	struct list_head debug_list;
 	spinlock_t  debug_list_lock;
 	wait_queue_head_t debug_wait;
diff --git a/include/linux/mfd/aat2870.h b/include/linux/mfd/aat2870.h
index 2445842d482d..e05e4427fdf1 100644
--- a/include/linux/mfd/aat2870.h
+++ b/include/linux/mfd/aat2870.h
@@ -135,7 +135,7 @@ struct aat2870_data {
 	int (*update)(struct aat2870_data *aat2870, u8 addr, u8 mask, u8 val);
 
 	/* for debugfs */
-	struct dentry *dentry_root;
+	struct debugfs_node *dentry_root;
 };
 
 struct aat2870_subdev_info {
diff --git a/include/net/mac80211.h b/include/net/mac80211.h
index 3443ac47384a..8896fdc00ecb 100644
--- a/include/net/mac80211.h
+++ b/include/net/mac80211.h
@@ -2010,7 +2010,7 @@ enum ieee80211_neg_ttlm_res {
  *	restrictions.
  * @hw_queue: hardware queue for each AC
  * @cab_queue: content-after-beacon (DTIM beacon really) queue, AP mode only
- * @debugfs_dir: debugfs dentry, can be used by drivers to create own per
+ * @debugfs_dir: debugfs_node, can be used by drivers to create own per
  *	interface debug files. Note that it will be NULL for the virtual
  *	monitor interface (if that is requested.)
  * @probe_req_reg: probe requests should be reported to mac80211 for this
@@ -4570,15 +4570,15 @@ struct ieee80211_ops {
 	void (*link_add_debugfs)(struct ieee80211_hw *hw,
 				 struct ieee80211_vif *vif,
 				 struct ieee80211_bss_conf *link_conf,
-				 struct dentry *dir);
+				 struct debugfs_node *dir);
 	void (*sta_add_debugfs)(struct ieee80211_hw *hw,
 				struct ieee80211_vif *vif,
 				struct ieee80211_sta *sta,
-				struct dentry *dir);
+				struct debugfs_node *dir);
 	void (*link_sta_add_debugfs)(struct ieee80211_hw *hw,
 				     struct ieee80211_vif *vif,
 				     struct ieee80211_link_sta *link_sta,
-				     struct dentry *dir);
+				     struct debugfs_node *dir);
 #endif
 	void (*sta_notify)(struct ieee80211_hw *hw, struct ieee80211_vif *vif,
 			enum sta_notify_cmd, struct ieee80211_sta *sta);
@@ -7010,7 +7010,7 @@ struct rate_control_ops {
 	const char *name;
 	void *(*alloc)(struct ieee80211_hw *hw);
 	void (*add_debugfs)(struct ieee80211_hw *hw, void *priv,
-			    struct dentry *debugfsdir);
+			    struct debugfs_node *debugfsdir);
 	void (*free)(void *priv);
 
 	void *(*alloc_sta)(void *priv, struct ieee80211_sta *sta, gfp_t gfp);
@@ -7034,7 +7034,7 @@ struct rate_control_ops {
 			 struct ieee80211_tx_rate_control *txrc);
 
 	void (*add_sta_debugfs)(void *priv, void *priv_sta,
-				struct dentry *dir);
+				struct debugfs_node *dir);
 
 	u32 (*get_expected_throughput)(void *priv_sta);
 };
diff --git a/include/sound/soc-dapm.h b/include/sound/soc-dapm.h
index bb8445b7a384..cd876d2d3060 100644
--- a/include/sound/soc-dapm.h
+++ b/include/sound/soc-dapm.h
@@ -10,6 +10,7 @@
 #ifndef __LINUX_SND_SOC_DAPM_H
 #define __LINUX_SND_SOC_DAPM_H
 
+#include <linux/debugfs.h>
 #include <linux/types.h>
 #include <sound/control.h>
 #include <sound/soc-topology.h>
@@ -498,7 +499,7 @@ int snd_soc_dapm_mux_update_power(struct snd_soc_dapm_context *dapm,
 
 /* dapm sys fs - used by the core */
 extern struct attribute *soc_dapm_dev_attrs[];
-void snd_soc_dapm_debugfs_init(struct snd_soc_dapm_context *dapm, struct dentry *parent);
+void snd_soc_dapm_debugfs_init(struct snd_soc_dapm_context *dapm, struct debugfs_node *parent);
 
 /* dapm audio pin control and status */
 int snd_soc_dapm_enable_pin(struct snd_soc_dapm_context *dapm, const char *pin);
diff --git a/include/sound/soc.h b/include/sound/soc.h
index 03abd4d3f501..c2fcc98fb1de 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -1202,7 +1202,7 @@ struct snd_soc_pcm_runtime {
 	struct delayed_work delayed_work;
 	void (*close_delayed_work_func)(struct snd_soc_pcm_runtime *rtd);
 #ifdef CONFIG_DEBUG_FS
-	struct dentry *debugfs_dpcm_root;
+	struct debugfs_node *debugfs_dpcm_root;
 #endif
 
 	unsigned int id; /* 0-based and monotonic increasing */
diff --git a/kernel/gcov/fs.c b/kernel/gcov/fs.c
index ed65d02010e0..8290ea6391ef 100644
--- a/kernel/gcov/fs.c
+++ b/kernel/gcov/fs.c
@@ -57,7 +57,7 @@ struct gcov_node {
 	struct gcov_info **loaded_info;
 	struct gcov_info *unloaded_info;
 	struct debugfs_node *dentry;
-	struct dentry **links;
+	struct debugfs_node **links;
 	int num_loaded;
 	char name[];
 };
diff --git a/kernel/trace/blktrace.c b/kernel/trace/blktrace.c
index 0bb9a7d1144a..e9423ddd5597 100644
--- a/kernel/trace/blktrace.c
+++ b/kernel/trace/blktrace.c
@@ -473,21 +473,29 @@ static int blk_subbuf_start_callback(struct rchan_buf *buf, void *subbuf,
 	return 0;
 }
 
-static int blk_remove_buf_file_callback(struct debugfs_node *dentry)
+static int blk_remove_buf_file_callback(struct dentry *dentry)
 {
-	debugfs_remove(dentry);
+	struct debugfs_node *node = debugfs_node_from_dentry(dentry);
+
+	debugfs_remove(node);
 
 	return 0;
 }
 
 static struct dentry *blk_create_buf_file_callback(const char *filename,
-						   struct debugfs_node *parent,
+						   struct dentry *parent,
 						   umode_t mode,
 						   struct rchan_buf *buf,
 						   int *is_global)
 {
-	return debugfs_create_file(filename, mode, parent, buf,
-					&relay_file_operations);
+	struct debugfs_node *node, *parent_node;
+
+	parent_node = debugfs_node_from_dentry(parent);
+
+	node = debugfs_create_file(filename, mode, parent_node, buf,
+				   &relay_file_operations);
+
+	return debugfs_node_dentry(node);
 }
 
 static const struct rchan_callbacks blk_relay_callbacks = {
@@ -517,6 +525,7 @@ static int do_blk_trace_setup(struct request_queue *q, char *name, dev_t dev,
 {
 	struct blk_trace *bt = NULL;
 	struct debugfs_node *dir = NULL;
+	struct dentry *dir_dentry;
 	int ret;
 
 	lockdep_assert_held(&q->debugfs_mutex);
@@ -587,7 +596,8 @@ static int do_blk_trace_setup(struct request_queue *q, char *name, dev_t dev,
 	debugfs_create_file("dropped", 0444, dir, bt, &blk_dropped_fops);
 	debugfs_create_file("msg", 0222, dir, bt, &blk_msg_fops);
 
-	bt->rchan = relay_open("trace", dir, buts->buf_size,
+	dir_dentry = debugfs_node_dentry(dir);
+	bt->rchan = relay_open("trace", dir_dentry, buts->buf_size,
 				buts->buf_nr, &blk_relay_callbacks, bt);
 	if (!bt->rchan)
 		goto err;
@@ -1902,4 +1912,3 @@ void blk_fill_rwbs(char *rwbs, blk_opf_t opf)
 EXPORT_SYMBOL_GPL(blk_fill_rwbs);
 
 #endif /* CONFIG_EVENT_TRACING */
-
diff --git a/lib/fault-inject.c b/lib/fault-inject.c
index d9a8fe11e6a4..5bf0f47725e8 100644
--- a/lib/fault-inject.c
+++ b/lib/fault-inject.c
@@ -262,7 +262,7 @@ struct debugfs_node *fault_create_debugfs_attr(const char *name,
 	debugfs_create_xul("reject-end", mode, dir, &attr->reject_end);
 #endif /* CONFIG_FAULT_INJECTION_STACKTRACE_FILTER */
 
-	attr->dname = dget(dir);
+	attr->dname = debugfs_node_get(dir);
 	return dir;
 }
 EXPORT_SYMBOL_GPL(fault_create_debugfs_attr);
diff --git a/lib/notifier-error-inject.h b/lib/notifier-error-inject.h
index e5a29f58d22c..d840a0ef33e1 100644
--- a/lib/notifier-error-inject.h
+++ b/lib/notifier-error-inject.h
@@ -20,6 +20,7 @@ struct notifier_err_inject {
 
 extern struct debugfs_node *notifier_err_inject_dir;
 
-extern struct dentry *notifier_err_inject_init(const char *name,
-		struct dentry *parent, struct notifier_err_inject *err_inject,
-		int priority);
+extern struct debugfs_node
+*notifier_err_inject_init(const char *name, struct debugfs_node *parent,
+			  struct notifier_err_inject *err_inject,
+			  int priority);
diff --git a/net/mac80211/ieee80211_i.h b/net/mac80211/ieee80211_i.h
index 25d02130f443..dab7b4ec3bc8 100644
--- a/net/mac80211/ieee80211_i.h
+++ b/net/mac80211/ieee80211_i.h
@@ -1186,11 +1186,11 @@ struct ieee80211_sub_if_data {
 
 #ifdef CONFIG_MAC80211_DEBUGFS
 	struct {
-		struct dentry *subdir_stations;
-		struct dentry *default_unicast_key;
-		struct dentry *default_multicast_key;
-		struct dentry *default_mgmt_key;
-		struct dentry *default_beacon_key;
+		struct debugfs_node *subdir_stations;
+		struct debugfs_node *default_unicast_key;
+		struct debugfs_node *default_multicast_key;
+		struct debugfs_node *default_mgmt_key;
+		struct debugfs_node *default_beacon_key;
 	} debugfs;
 #endif
 
@@ -1594,8 +1594,8 @@ struct ieee80211_local {
 
 #ifdef CONFIG_MAC80211_DEBUGFS
 	struct local_debugfsdentries {
-		struct dentry *rcdir;
-		struct dentry *keys;
+		struct debugfs_node *rcdir;
+		struct debugfs_node *keys;
 	} debugfs;
 	bool force_tx_status;
 #endif
diff --git a/sound/soc/sof/sof-client-ipc-flood-test.c b/sound/soc/sof/sof-client-ipc-flood-test.c
index 443d36294c99..efc76f42ac83 100644
--- a/sound/soc/sof/sof-client-ipc-flood-test.c
+++ b/sound/soc/sof/sof-client-ipc-flood-test.c
@@ -29,7 +29,7 @@
 
 struct sof_ipc_flood_priv {
 	struct debugfs_node *dfs_root;
-	struct dentry *dfs_link[2];
+	struct debugfs_node *dfs_link[2];
 	char *buf;
 };
 
diff --git a/virt/kvm/kvm_main.c b/virt/kvm/kvm_main.c
index edba5dd67c41..165764eafe9e 100644
--- a/virt/kvm/kvm_main.c
+++ b/virt/kvm/kvm_main.c
@@ -1017,7 +1017,7 @@ static int kvm_create_vm_debugfs(struct kvm *kvm, const char *fdname)
 	dent = debugfs_lookup(dir_name, kvm_debugfs_dir);
 	if (dent) {
 		pr_warn_ratelimited("KVM: debugfs: duplicate directory %s\n", dir_name);
-		dput(dent);
+		debugfs_node_put(dent);
 		mutex_unlock(&kvm_debugfs_lock);
 		return 0;
 	}
@@ -6216,7 +6216,8 @@ static void kvm_uevent_notify_change(unsigned int type, struct kvm *kvm)
 		char *tmp, *p = kmalloc(PATH_MAX, GFP_KERNEL);
 
 		if (p) {
-			tmp = dentry_path_raw(kvm->debugfs_dentry, p, PATH_MAX);
+			tmp = debugfs_node_path_raw(kvm->debugfs_dentry, p,
+						    PATH_MAX);
 			if (!IS_ERR(tmp))
 				add_uevent_var(env, "STATS_PATH=%s", tmp);
 			kfree(p);
