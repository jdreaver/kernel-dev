From 8a88578ddfc87a44d01bd6165985611598eaf648 Mon Sep 17 00:00:00 2001
From: David Reaver <me@davidreaver.com>
Date: Mon, 3 Feb 2025 13:13:09 -0800
Subject: [RFC PATCH 1/6] debugfs: Add temporary "#define debugfs_node dentry"
 and includes
To: Greg Kroah-Hartman <gregkh@linuxfoundation.org>,
    Rafael J. Wysocki <rafael@kernel.org>,
    Danilo Krummrich <dakr@kernel.org>
Cc: Steven Rostedt <rostedt@goodmis.org>,
    Christian Brauner <brauner@kernel.org>,
    Alexander Viro <viro@zeniv.linux.org.uk>,
    Tejun Heo <tj@kernel.org>,
    linux-fsdevel@vger.kernel.org,
    cocci@inria.fr,
    linux-kernel@vger.kernel.org

Add a temporary "#define debugfs_node dentry" to facilitate migrating
debugfs APIs from dentry to a new opaque descriptor, debugfs_node.
This change allows subsequent commits to apply a Coccinelle script and
manual fixups before replacing the #define with an actual struct
declaration.

To minimize the number of additional #include statements, the #define is
also placed in dcache.h, right below the definition of struct dentry.

Signed-off-by: David Reaver <me@davidreaver.com>
---
 drivers/gpu/drm/i915/gt/uc/intel_guc_debugfs.h | 2 ++
 drivers/gpu/drm/xe/xe_gsc_debugfs.h            | 2 ++
 drivers/gpu/drm/xe/xe_guc_debugfs.h            | 2 ++
 drivers/gpu/drm/xe/xe_huc_debugfs.h            | 2 ++
 drivers/gpu/drm/xe/xe_uc_debugfs.h             | 2 ++
 include/drm/drm_debugfs.h                      | 1 +
 include/linux/dcache.h                         | 2 ++
 include/linux/debugfs.h                        | 2 ++
 include/linux/fault-inject.h                   | 1 +
 include/linux/irqdesc.h                        | 1 +
 10 files changed, 17 insertions(+)

diff --git a/drivers/gpu/drm/i915/gt/uc/intel_guc_debugfs.h b/drivers/gpu/drm/i915/gt/uc/intel_guc_debugfs.h
index 424c26665cf1..7a7b722cf106 100644
--- a/drivers/gpu/drm/i915/gt/uc/intel_guc_debugfs.h
+++ b/drivers/gpu/drm/i915/gt/uc/intel_guc_debugfs.h
@@ -6,6 +6,8 @@
 #ifndef DEBUGFS_GUC_H
 #define DEBUGFS_GUC_H
 
+#include <linux/debugfs.h>
+
 struct intel_guc;
 struct dentry;
 
diff --git a/drivers/gpu/drm/xe/xe_gsc_debugfs.h b/drivers/gpu/drm/xe/xe_gsc_debugfs.h
index c2e2645dc705..3261158c9a8d 100644
--- a/drivers/gpu/drm/xe/xe_gsc_debugfs.h
+++ b/drivers/gpu/drm/xe/xe_gsc_debugfs.h
@@ -6,6 +6,8 @@
 #ifndef _XE_GSC_DEBUGFS_H_
 #define _XE_GSC_DEBUGFS_H_
 
+#include <linux/debugfs.h>
+
 struct dentry;
 struct xe_gsc;
 
diff --git a/drivers/gpu/drm/xe/xe_guc_debugfs.h b/drivers/gpu/drm/xe/xe_guc_debugfs.h
index 4756dff26fca..b03f64592a70 100644
--- a/drivers/gpu/drm/xe/xe_guc_debugfs.h
+++ b/drivers/gpu/drm/xe/xe_guc_debugfs.h
@@ -6,6 +6,8 @@
 #ifndef _XE_GUC_DEBUGFS_H_
 #define _XE_GUC_DEBUGFS_H_
 
+#include <linux/debugfs.h>
+
 struct dentry;
 struct xe_guc;
 
diff --git a/drivers/gpu/drm/xe/xe_huc_debugfs.h b/drivers/gpu/drm/xe/xe_huc_debugfs.h
index ec58f1818804..562069ee5363 100644
--- a/drivers/gpu/drm/xe/xe_huc_debugfs.h
+++ b/drivers/gpu/drm/xe/xe_huc_debugfs.h
@@ -6,6 +6,8 @@
 #ifndef _XE_HUC_DEBUGFS_H_
 #define _XE_HUC_DEBUGFS_H_
 
+#include <linux/debugfs.h>
+
 struct dentry;
 struct xe_huc;
 
diff --git a/drivers/gpu/drm/xe/xe_uc_debugfs.h b/drivers/gpu/drm/xe/xe_uc_debugfs.h
index a13382df2bd7..c37319a9e249 100644
--- a/drivers/gpu/drm/xe/xe_uc_debugfs.h
+++ b/drivers/gpu/drm/xe/xe_uc_debugfs.h
@@ -6,6 +6,8 @@
 #ifndef _XE_UC_DEBUGFS_H_
 #define _XE_UC_DEBUGFS_H_
 
+#include <linux/debugfs.h>
+
 struct dentry;
 struct xe_uc;
 
diff --git a/include/drm/drm_debugfs.h b/include/drm/drm_debugfs.h
index cf06cee4343f..14eaccccf283 100644
--- a/include/drm/drm_debugfs.h
+++ b/include/drm/drm_debugfs.h
@@ -34,6 +34,7 @@
 
 #include <linux/types.h>
 #include <linux/seq_file.h>
+#include <linux/debugfs.h>
 
 #include <drm/drm_gpuvm.h>
 
diff --git a/include/linux/dcache.h b/include/linux/dcache.h
index 4afb60365675..4b0c11cd3d50 100644
--- a/include/linux/dcache.h
+++ b/include/linux/dcache.h
@@ -127,6 +127,8 @@ struct dentry {
 	} d_u;
 };
 
+#define debugfs_node dentry
+
 /*
  * dentry->d_lock spinlock nesting subclasses:
  *
diff --git a/include/linux/debugfs.h b/include/linux/debugfs.h
index fa2568b4380d..e6ee571e8c36 100644
--- a/include/linux/debugfs.h
+++ b/include/linux/debugfs.h
@@ -21,6 +21,8 @@
 struct device;
 struct file_operations;
 
+#define debugfs_node dentry
+
 struct debugfs_blob_wrapper {
 	void *data;
 	unsigned long size;
diff --git a/include/linux/fault-inject.h b/include/linux/fault-inject.h
index 8c829d28dcf3..750c9dc42f59 100644
--- a/include/linux/fault-inject.h
+++ b/include/linux/fault-inject.h
@@ -12,6 +12,7 @@ struct kmem_cache;
 
 #include <linux/atomic.h>
 #include <linux/configfs.h>
+#include <linux/debugfs.h>
 #include <linux/ratelimit.h>
 
 /*
diff --git a/include/linux/irqdesc.h b/include/linux/irqdesc.h
index fd091c35d572..549d930407fd 100644
--- a/include/linux/irqdesc.h
+++ b/include/linux/irqdesc.h
@@ -5,6 +5,7 @@
 #include <linux/rcupdate.h>
 #include <linux/kobject.h>
 #include <linux/mutex.h>
+#include <linux/debugfs.h>
 
 /*
  * Core internal functions to deal with irq descriptors
